  let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')
let chats = require('../database/chats.json')
let log = require('../database/log.json')
let botinfo = require('../database/botinfo.json')
let clans = require('../database/clans.json')
let bossinfo = require('../database/bossinfo.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const forbiddenTitles = [
  "–ë–∏–∑–Ω–µ—Å–º–µ–Ω", 
  "üî•Supportüî•",
  "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", 
  "–£–¥–∞–ª—ë–Ω–Ω—ã–π —Ç–∏—Ç—É–ª"









];

let cars = require('../spisok/–º–∞—à–∏–Ω—ã.js')
let trees = require('../spisok/–¥–µ—Ä–µ–≤—å—è.js')
let presidents = require("../database/presidents.json");


let yachts = require('../spisok/—è—Ö—Ç—ã.js')
let airplanes = require('../spisok/—Å–∞–º–æ–ª–µ—Ç—ã.js')
let helicopters = require('../spisok/–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã.js')
let apartments = require('../spisok/–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã.js')
let homes = require('../spisok/–¥–æ–º–∞.js')
let videocards = require('../spisok/–≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã.js')
let farms = require('../spisok/—Ñ–µ—Ä–º—ã.js')
let minertool = require('../spisok/–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.js')
let computers = require('../spisok/–∫–æ–º–ø—å—é—Ç–µ—Ä—ã.js')

let businesses2 = require("../spisok/–±–∏–∑–Ω–µ—Å—ã.js")
const phones = require("../spisok/—Ç–µ–ª–µ—Ñ–æ–Ω—ã.js")

let businesses = require("../spisok/business spisok.js")

const tokenData = getToken();


const tokensFilePath4 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞.json';

const tokensFilePath2 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–∏–¥ –±–µ—Å–µ–¥.json';

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken4() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath4, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken2() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath2, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken3() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData2 = getToken2(); 
const tokenData3 = getToken3(); 
const tokenData4 = getToken4(); 

const tokensFilePath5 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å—Å—ã–ª–∫–∏ —á–∞—Ç–æ–≤.json';

function getToken5() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath5, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData5 = getToken5(); 


let adminka = tokenData5.admin

const coaf = tokenData2.coaf
let val1 = tokenData3.val1 
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4

let config = require('../database/settings.json');


let tokensCache = null;

setInterval(() => {
  tokensCache = getToken3(); 
  if (tokensCache) {
      val1 = tokensCache.val1; 
      val2 = tokensCache.val2; 
      val3 = tokensCache.val3; 
      val4 = tokensCache.val4; 
  }
}, 1000);

const chatlogi = tokenData2.chatlogi;
const spoler = tokenData4;

const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

const tokenu = tokenData.user

const user = new VK({
  token: tokenu
});


async function createStarPost(bot) {
  try {
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ç–æ–∫–µ–Ω:', tokenData.token);

    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
    });

    console.log('–û—Ç–≤–µ—Ç –æ—Ç API groups.getById:', groupInfo);

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    if (config.starPostId) {
      try {
        console.log("–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞:", config.starPostId, "–∏–∑ –≥—Ä—É–ø–ø—ã:", -groupId); // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        const deleteResponse = await user.api.wall.delete({
          owner_id: -groupId,
          post_id: config.starPostId,
        });
        console.log('–û—Ç–≤–µ—Ç –æ—Ç API wall.delete:', deleteResponse);
      } catch (deleteError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ –ø–æ—Å—Ç–∞ "–ü–æ—Å—Ç—Å—Ç–∞—Ä":', deleteError);
        console.error("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", deleteError.message);
      }
    }

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `‚≠ê –ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É –∏ –ø–æ–ª—É—á–∏ –Ω–∞–≥—Ä–∞–¥—É! ‚≠ê\n\n–õ–∞–π–∫–Ω–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç –∏ –ø–æ–ª—É—á–∏ Starr Drop!`,
      attachments: 'photo-219408161_457239472',
      access_token: tokenu
    });

    console.log('–û—Ç–≤–µ—Ç –æ—Ç API wall.post:', postResponse);

    const newPostId = postResponse.post_id;
    config.starPostId = newPostId;
    fs.writeFileSync('./database/settings.json', JSON.stringify(config, null, 4));

    vk.api.wall.closeComments({

      owner_id: -groupId,

      post_id: newPostId

    });

    const successMsg = `‚úÖ –ü–æ—Å—Ç "Starr Drop" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${newPostId}.`;

    if (bot) {
      await bot(successMsg);
    }

    return successMsg;

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–ü–æ—Å—Ç—Å—Ç–∞—Ä":', error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–ü–æ—Å—Ç—Å—Ç–∞—Ä" –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏! üò• ${error.message}`;

    if (bot) {
      await bot(errorMsg);
    }
    return errorMsg
  }
}
// –ó–∞–ø—É—Å–∫–∞–µ–º setInterval –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
setInterval(async () => { // –î–æ–±–∞–≤–∏–ª async
  await createStarPost(null); // –ü–µ—Ä–µ–¥–∞–µ–º null, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–∞ 'message' –∏ 'bot'
}, 24 * 60 * 60 * 1000); // 24 —á–∞—Å–∞ * 60 –º–∏–Ω—É—Ç * 60 —Å–µ–∫—É–Ω–¥ * 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥



cmd.hear(/^(?:–∞–∫—Ü–∏—è2)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)
  const groupInfo = await vk.api.call('groups.getById', {
    access_token: tokenData.token,
    v: '5.131',
  });

  if (!groupInfo || groupInfo.length === 0) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
  }

  const groupId = groupInfo[0].id;

  if (message.args[1] === "–≤–∫–ª") {
    botinfo.timerx3 = Date.now() + 86400000 * 3;
    const datka = new Date(botinfo.timerx3);
    botinfo.donx3 = true;
    vk.api.wall
      .post({
        owner_id: -groupId,

        message: `–£—Ä–∞, –ê–∫—Ü–∏—è x2 –¥–æ–Ω–∞—Çü•∞

–¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –Ω–∞ 100—Ä., –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 200—Ä. ‚òë

üìå –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–∫–∞—á–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, –≤–µ–¥—å —Å–∫–∏–¥–∫–∏ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ..

‚Üó –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
          }.${datka.getFullYear()} (–ú–°–ö), –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–æ–º–∞–Ω–¥–æ–π: –ü–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞]`,
      })
      .then((x) => {
        actionx3 = x.post_id;
      });
    return bot(
      `–ê–∫—Ü–∏—è —Ö3 –¥–æ–Ω–∞—Ç –∑–∞–ø—É—â–µ–Ω–∞ –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö)`
    );
  }
  if (message.args[1] === "–≤—ã–∫–ª") {
    botinfo.timerx3 = 0;
    botinfo.donx3 = false;
    return bot(`–ê–∫—Ü–∏—è —Ö2 –¥–æ–Ω–∞—Ç –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç.`);
  }
});

cmd.hear(/^(?:–∞–∫—Ü–∏—è25)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)
  const groupInfo = await vk.api.call('groups.getById', {
    access_token: tokenData.token,
    v: '5.131',
  });

  if (!groupInfo || groupInfo.length === 0) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
  }

  const groupId = groupInfo[0].id;
  if (message.args[1] === "–≤–∫–ª") {
    botinfo.timer25 = Date.now() + 86400000 * 10;
    const datka = new Date(botinfo.timerx3);
    botinfo.sell25 = true;
    await vk.api.wall.post({
      owner_id: -groupId,

      message: `–£—Ä–∞, —Å–∫–∏–¥–∫–∏ü•∞

–¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä <<–ò–º–ø–µ—Ä–∞—Ç–æ—Ä>> –∑–∞ 900—Ä., —Ç–æ –ø–æ–∫—É–ø–∫–∞ –æ–±–æ–π–¥—ë—Ç—Å—è –≤–∞–º –≤ 675—Ä.

üìå –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–∫–∞—á–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, –≤–µ–¥—å —Å–∫–∏–¥–∫–∏ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ..

‚Üó –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
        }.${datka.getFullYear()} (–ú–°–ö), –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–æ–º–∞–Ω–¥–æ–π: –ü–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞]`,
    });
    return bot(
      `–ê–∫—Ü–∏—è —Å–∫–∏–¥–∫–∞ 25% –∑–∞–ø—É—â–µ–Ω–∞ –¥–æ ${datka.getHours()}:${datka.getMinutes()}:${datka.getSeconds()} ${datka.getDate()}.${datka.getMonth() + 1
      }.${datka.getFullYear()} (–ú–°–ö)`
    );
  }
  if (message.args[1] === "–≤—ã–∫–ª") {
    botinfo.timer25 = 0;
    botinfo.sell25 = false;
    return bot(`–ê–∫—Ü–∏—è —Å–∫–∏–¥–∫–∏ 25% –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤—É—é—Ç.`);
  }
});

cmd.hear(/^(?:–±–æ—Å—Å –∂–∏–∑–Ω–∏|–±–æ—Å—Å —Ö–ø)\s(.*)$/i, async (message) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  message.args[1] = message.args[1].replace(/([.,])/gi, "");

  message.args[1] = message.args[1].replace(/([–∫k])/gi, "000");

  message.args[1] = message.args[1].replace(/([–ºm])/gi, "000000");

  
;

  if (!Number(message.args[1])) return;

  message.args[1] = Math.floor(Number(message.args[1]));

  bossinfo.boss_max = message.args[1];
  console.log(bossinfo.boss_max)

  return message.send("‚úÖ –ñ–∏–∑–Ω–∏ –±–æ—Å—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!");
});

cmd.hear(/^(?:–±–æ—Å—Å —Ñ–æ—Ç–æ)\s(.*)$/i, async (message) => {

  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)


  bossinfo.photo = message.args[1];

  return message.send("‚úÖ –§–æ—Ç–æ –±–æ—Å—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ!");
});

cmd.hear(/^–±–æ—Å—Å –∏–º—è\s(.*)$/i, async (message) => {

  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  bossinfo.boss_name = message.args[1];

  return message.send("‚úÖ –ò–º—è –±–æ—Å—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ!");
});

cmd.hear(/^–±–æ—Å—Å –ø—Ä–∏–∑\s([0-9]+)$/i, async (message, bot) => {

  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  let user = double.find((x) => x.uid === Number(message.args[1]));

  if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

  if (user.settings.imperator === false) {
    user.settings.imperator = true;
  } else {
    user.rubli += 500;
  }

  await bot(`–ø—Ä–∏–∑—ã –≤—ã–¥–∞–Ω—ã –∏–≥—Ä–æ–∫—É ${user.tag}.`);

  if (user.notifications)
    await vk.api.messages.send({
      user_id: user.id,
      message: `@id${user.id}(${user.tag}), —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –±–∏—Ç–≤–µ —Å –±–æ—Å—Å–æ–º! üòà
‚úÖ –í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ç–æ–ø 10 —É—Ä–æ–Ω–∞ –ø–æ –±–æ—Å—Å—É, –ø–æ—ç—Ç–æ–º—É –º—ã –¥–∞—Ä–∏–º –í–∞–º –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –ò–º–ø–µ—Ä–∞—Ç–æ—Ä! –ï—Å–ª–∏ —É –í–∞—Å –±—ã–ª –∏–º–ø–µ—Ä–∞—Ç–æ—Ä, —Ç–æ –≤—ã–¥–∞–Ω–æ 500 —Ä—É–±–ª–µ–π –Ω–∞ –¥–æ–Ω–∞—Ç-—Å—á—ë—Ç.`,
      random_id: 0,
    });
});

cmd.hear(/^(?:–±–æ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å)$/i, async (message) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)
    bossinfo.boss = bossinfo.boss_max;

    bossinfo.boss_name = bossinfo.boss_name;

    double.map((player) => {
      //player.sataka = 1;

      player.bossyr = 0;
    });

    return message.send("‚úÖ –ë–æ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
  
});

cmd.hear(/^(?:—Å–Ω–µ—Å—Ç–∏ —á–∞—Ç|–±–∞–Ω —á–∞—Ç|—á–∞—Ç –±–∞–Ω|—á–∞—Ç –≤—ã–∫–ª)\s*(\d+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const chatId = parseInt(message.args[1]);
    const chat = chats.find(c => c.id === chatId);

    if (!chat) return bot(`‚ùå –ß–∞—Ç #${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    if (chat.type === 5) return bot("‚ÑπÔ∏è –ß–∞—Ç —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω");

    chat.type = 5; // –û—Ç–∫–ª—é—á–∞–µ–º —á–∞—Ç

    bot(`‚úÖ –ß–∞—Ç #${chatId} –æ—Ç–∫–ª—é—á—ë–Ω`);

  } catch (e) {
    console.error('–û—à–∏–±–∫–∞:', e);
    bot(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${e.message}`);
  }
});

cmd.hear(/^(?:–≤–∫–ª—é—á–∏—Ç—å —á–∞—Ç 1|–≤—ã–¥–∞—Ç—å –æ–±—ã—á–Ω—ã–π)\s*(\d+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)
  
  const chatId = parseInt(message.args[1]);
  const chat = chats.find(c => c.id === chatId);
  
  if (!chat) return bot(`‚ùå –ß–∞—Ç #${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  if (chat.type === 1) return bot("‚ÑπÔ∏è –ß–∞—Ç —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω (–æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º)");
  
  chat.type = 1;
  const activeChats = chats.filter(c => c.type !== 5).map(c => `#${c.id}`);
  
  bot(`‚úÖ –ß–∞—Ç #${chatId} –≤–∫–ª—é—á–µ–Ω –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ\nüìã –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã: ${
    activeChats.join(', ')
  }`);
});

cmd.hear(/^(?:–≤–∫–ª—é—á–∏—Ç—å —á–∞—Ç 2|–≤—ã–¥–∞—Ç—å –¥–∞–±–ª)\s*(\d+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)
  
  const chatId = parseInt(message.args[1]);
  const chat = chats.find(c => c.id === chatId);
  
  if (!chat) return bot(`‚ùå –ß–∞—Ç #${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  if (chat.type === 2) return bot("‚ÑπÔ∏è –ß–∞—Ç —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω (–ø—Ä–µ–º–∏—É–º —Ä–µ–∂–∏–º)");
  
  chat.type = 2;
  const activeChats = chats.filter(c => c.type !== 5).map(c => `#${c.id}`);
  
  bot(`‚úÖ –ß–∞—Ç #${chatId} –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–µ–º–∏—É–º —Ä–µ–∂–∏–º–µ\nüìã –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã: ${
    activeChats.join(', ')
  }`);
});

cmd.hear(/^(?:–ø–æ—Å—Ç—Ñ–æ—Ä—Ç—É–Ω–∞|gjcnajhneyf)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `üéÇ –ê–∫—Ü–∏—è ‚Äî ¬´–§–û–†–¢–£–ù–ê¬ª! üéâ
‚úÖ –í –æ–±—â–µ–º –±—É–¥–µ—Ç 100 –ø—Ä–∏–∑–æ–≤ –≤ –∞–∫—Ü–∏–∏! üéÅ
üõçÔ∏è –ü—Ä–∏–∑—ã:
      ‚Ä¢ 1. –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–µ–π—Å—ã ü§´
      ‚Ä¢ 2. –î–æ–Ω–∞—Ç-–∫–µ–π—Å—ã üí∞
      ‚Ä¢ 3. –ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ üíé
      ‚Ä¢ 4. –ë–∏–ª–µ—Ç—ã üéüÔ∏è
      ‚Ä¢ 5. ${val4} üíæ
‚≠ê –ß—Ç–æ–±—ã –∏—Å–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö ¬´–§–æ—Ä—Ç—É–Ω–∞¬ª
‚ùå –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç - –ø—Ä–∏–∑—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–∏–¥—É—Ç. üòâ`,
      attachments: 'photo-171493284_458395871',
    });

    const postId = postResponse.post_id;

    config.fortuna = postId;
    config.fortunacount = 100;
    fs.writeFileSync('./database/settings.json', JSON.stringify(config, null, 4));


    const successMsg = `‚úÖ –ü–æ—Å—Ç "–§–æ—Ä—Ç—É–Ω–∞" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${postId}`;
    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–§–æ—Ä—Ç—É–Ω–∞":', error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–§–æ—Ä—Ç—É–Ω–∞"! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg
  }
});

cmd.hear(/^(?:–ø–æ—Å—Ç—Å—Ç–∞—Ä|gjcncnfhlf)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  return await createStarPost(bot);

});

cmd.hear(/^(?:–ø–æ—Å—Ç–∏–¥–µ—è)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
      group_id: config.groupId // –î–æ–±–∞–≤–∏–ª group_id –≤ –∑–∞–ø—Ä–æ—Å
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `üí° –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏! üìù

–ù–∞–º –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º, –∞–∫—Ü–∏—è–º –∏ –∫–æ–Ω–∫—É—Ä—Å–∞–º. –í–∞—à–∏ –∏–¥–µ–∏ –ø–æ–º–æ–≥—É—Ç —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –µ—â–µ –ª—É—á—à–µ! üëá`,
      attachments: '',
    });

    const postId = postResponse.post_id;

    const successMsg = `‚úÖ –ü–æ—Å—Ç "–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏!" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${postId}`;

    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏':", error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏'! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg;
  }
});

cmd.hear(/^(?:–ø–æ—Å—Ç–∑–∞–∫—Ä—ã—Ç–∏–µ)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
      group_id: config.groupId // –î–æ–±–∞–≤–∏–ª group_id –≤ –∑–∞–ø—Ä–æ—Å
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `–° —Å–æ–∂–∞–ª–µ–Ω–∏–µ–º üòî —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É. 
      üò¢ –°–ø–∞—Å–∏–±–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É üôè –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!
      üïπÔ∏è –ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –±–æ—Ç –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω üëç –∏ –ø—Ä–∏–Ω–µ—Å –≤–∞–º –º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–∏ üòÑ.`,
      attachments: '',
    });

    const postId = postResponse.post_id;

    const successMsg = `‚úÖ –ü–æ—Å—Ç "–ó–∞–∫—Ä—ã—Ç–∏–µ" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${postId}`;

    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏':", error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏'! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg;
  }
});

cmd.hear(/^(?:–ø–æ—Å—Ç–Ω–∞–±–æ—Ä)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
      group_id: config.groupId 
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `üöÄ –°—Ç–∞–Ω—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞! ü§ñ –≠—Ç–æ —Ç–≤–æ–π —à–∞–Ω—Å:

‚ú® –í–ª–∏—è—Ç—å –Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ. üí¨
ü§ù –ü–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º. üíñ
üëë –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ. üôå
üìà –†–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å—Ñ–µ—Ä–µ –∫–æ–º—å—é–Ω–∏—Ç–∏-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞. üß†
–ú—ã –∏—â–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ üôã‚Äç‚ôÄÔ∏èüôã‚Äç‚ôÇÔ∏è, –≥–æ—Ç–æ–≤—ã—Ö –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ üõ°Ô∏è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É üòä.

–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –≤—ã? ‚úçÔ∏è –ü–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! üëá`,
      attachments: '',
    });

    const postId = postResponse.post_id;

    const successMsg = `‚úÖ –ü–æ—Å—Ç "–ù–∞–±–æ—Ä" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${postId}`;

    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏':", error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤–∞—à–∏ –∏–¥–µ–∏'! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg;
  }
});

cmd.hear(/^(?:–ø–æ—Å—Ç–æ–±–Ω–æ–≤–∞)$/i, async (message, bot) => {
  if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
      group_id: config.groupId
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `üõ†Ô∏è –ú—ã –Ω–µ —Å—Ç–æ–∏–º –Ω–∞ –º–µ—Å—Ç–µ! –ü–æ–ª–Ω—ã–º —Ö–æ–¥–æ–º –∏–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –∏–≥—Ä—ã. üéÆ –°–∫–æ—Ä–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º, —á—Ç–æ –Ω–æ–≤–æ–≥–æ –≤–∞—Å –∂–¥–µ—Ç! üòâ`,
      attachments: 'photo-229401771_457239082', // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–æ—Ç–æ
    });

    const postId = postResponse.post_id;

    const successMsg = `‚úÖ –ü–æ—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: https://vk.com/wall-${groupId}_${postId}\nPost ID: ${postId}`;

    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ '–ì–æ—Ç–æ–≤–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ':", error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg;
  }
});

cmd.hear(/^(?:-–≤–∞–ª—é—Ç–∞)\s([0-9]+)\s(.*)$/i, async (message, bot) => {

    if (message.user.settings.adm < 6) return bot(`–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è`)

    const hasPermission = Object.values(spoler).includes(String(message.user.id)); // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞


    if (!hasPermission) return 
  
  
      message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
      message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
      message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
      message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
    
      if(!Number(message.args[2])) return;
      message.args[2] = Math.floor(Number(message.args[2]));
    
      if(message.args[2] <= 0) return bot(`—É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å.`)
    
      
      else if(message.args[2])
      {
        let user = double.find(x=> x.uid === Number(message.args[1]));
        if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. `);
    
  
        user.balance -= message.args[2];
        await bot(`–≤—ã –∑–∞–±—Ä–∞–ª–∏ —É [id${user.id}|${user.tag}] ${utils.sp(message.args[2])} ${val1}`);
          }
            try{
       vk.api.messages.send({chat_id: chatlogi, message: `üî± Super - [id${message.user.id}|${message.user.tag}]
  üÜî –ó–∞–±—Ä–∞–ª —É –∏–≥—Ä–æ–∫–∞ - ${ Number(message.args[1])} 
  üëë –°—É–º–º–∞ ${val1} - ${utils.sp(message.args[2])} `, random_id: 0})
            }catch(e) {
    console.log('–ó–∞–±—Ä–∞–ª–∏ ${val4}.')
  };
});



cmd.hear(/^(?:–ø–æ—Å—Ç|—Å–¥–µ–ª–∞–π –ø–æ—Å—Ç|post)(?:\s+)?([\s\S]*)/i, async (message, bot) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (message.user.settings.adm < 6) {
      await bot("üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º");
      return;
    }

    const postText = message.args[1]?.trim();

    // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä
    if (!postText) {
      const exampleText = `–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n–ø–æ—Å—Ç –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!\n–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –ø–æ—Å—Ç–∞\n\n–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ ‚ú®`;
      
      await bot(exampleText, {
        keyboard: JSON.stringify({
          "inline": true,
          "buttons": [
            [{
              "action": {
                "type": "text",
                "payload": JSON.stringify({command: "–ø–æ—Å—Ç –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç"}),
                "label": "üìù –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç"
              },
              "color": "primary"
            }]
          ]
        })
      });
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø—ã
        const groupInfo = await vk.api.call('groups.getById', {
          access_token: tokenData.token,
          v: '5.131',
        });
    if (!groupInfo || groupInfo.length === 0) {
      await bot("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ");
      return;
    }

    // –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç
    const { post_id } = await vk.api.wall.post({
      owner_id: -groupInfo[0].id,
      message: postText,
      access_token: tokenData.token
    });

    // –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
    await bot(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: vk.com/wall-${groupInfo[0].id}_${post_id}`);

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –ø–æ—Å—Ç:", error);
    await bot(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${error.message}`);
  }
});

module.exports = commands;
