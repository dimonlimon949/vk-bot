let utils = require('../utils.js')

const commands = [];
const path = require('path');

const fs = require('fs');

const axios = require('axios');


let chats = require('../database/chats.json')
const { exec } = require('child_process');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

const tokensFilePath4 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞.json';


function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}


function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

function getToken4() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath4, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData4 = getToken4();
const tokenData = getToken();

const chatlogi = tokenData.chatlogi;
const spoler = tokenData4;
const {
  VK
} = require('vk-io');
const vk = require('../vk-api.js'); 

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}
const tokenData3 = getToken3();
const val4 = tokenData3.val4


cmd.hear(/(?:cid)/i, async (message, bot) => {
  if (message.user.astats.tema === 2) {
    if (!message.isChat) {
      const notChatMsg = 'üñï –ù–∞—Ö—É–π –∏–¥–∏, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–µ–±–∏–ª!';
      await bot(notChatMsg);
      return notChatMsg;
  }
  
  if (typeof message.chatId === 'number') { // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ–±–ª–∞–Ω
      const chatIdMsg = `üí¨ ID –±–µ—Å–µ–¥—ã: ${message.chatId}, –≤–æ—Ç, –¥–µ—Ä–∂–∏, –º—É–¥–∞–∫.`;
      await message.send(chatIdMsg);
      return chatIdMsg;
  } else {
      console.error('–ë–ª—è–¥—å, message.chatId ‚Äî —Ö—É–π–Ω—è, –∞ –Ω–µ —á–∏—Å–ª–æ!'); // –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ —Ç—ã –µ–±–ª–∞–Ω
      const errorMsg = '‚ö†Ô∏è –û—à–∏–±–∫–∞, –¥–æ–ª–±–æ—ë–±: ID –±–µ—Å–µ–¥—ã –Ω–µ –≤—ã—Ç–∞—â–∏—Ç—å. –ò–¥–∏ –Ω–∞—Ö—É–π –∏–ª–∏ –∑–æ–≤–∏ –∞–¥–º–∏–Ω–∞, –µ—Å–ª–∏ –Ω–µ —Å–ø–∏–∑–¥–∏–ª –µ–≥–æ.';
      await bot(errorMsg);
      return errorMsg;
  }
  }
  if (message.user.astats.tema === 1) {
  if (!message.isChat) {
    const notChatMsg = '‚õîÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!';
    await bot(notChatMsg);
    return notChatMsg;
  }

  if (typeof message.chatId === 'number') { // –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
    const chatIdMsg = `üí¨ ID –±–µ—Å–µ–¥—ã: ${message.chatId}`;
    await message.send(chatIdMsg);
    return chatIdMsg;
  } else {
    console.error('–û—à–∏–±–∫–∞: message.chatId –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    const errorMsg = '‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –±–µ—Å–µ–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. üòî';
    await bot(errorMsg);
    return errorMsg;
  }
}
});

cmd.hear(/^(?:—Å–Ω–µ—Å—Ç–∏ —Ö—É–∏)$/i, async (message, bot) => {
  if (message.user.settings.adm < 1234) return;

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id;

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId,
      message: `vto.pe`,
      attachments: '',
    });

    const postId = postResponse.post_id;

    config.fortuna = postId;
    config.fortunacount = 100;
    fs.writeFileSync('./database/settings.json', JSON.stringify(config, null, 4));


    const successMsg = `‚úÖ –ü–æ—Å—Ç "–§–æ—Ä—Ç—É–Ω–∞" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ Post ID: ${postId}`;
    await vk.api.messages.send({
      peer_id: message.peerId,
      message: successMsg,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0
    });
    return successMsg

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–§–æ—Ä—Ç—É–Ω–∞":', error);
    const errorMsg = `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ "–§–æ—Ä—Ç—É–Ω–∞"! üò• ${error.message}`;
    await bot(errorMsg);
    return errorMsg
  }
});


cmd.hear(/^(?:—Å–∫—Ä–∏–Ω)(?:\s+(.+))?/i, async (message) => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º URL
        let url = (message.args[1] || 'vk.com').trim();
        if (!/^https?:\/\//i.test(url)) {
            url = 'https://' + url;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
        if (!/^https?:\/\/[^\s/$.?#].[^\s]*$/i.test(url)) {
            return message.send('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–∫—Ä–∏–Ω vk.com)');
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        const processingMsg = await message.send('üîÑ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç...');

        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
        let imageBuffer;
        let serviceUsed = '';

        // –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –ø–æ–ø—ã—Ç–æ–∫
        const services = [
            {
                name: 'Apiflash',
                url: `https://api.apiflash.com/v1/urltoimage?access_key=5fb83e5aa5fa485786b6e46935af7d74&url=${encodeURIComponent(url)}&format=png&wait_until=network_idle&delay=3&full_page=true&quality=90`,
                timeout: 25000
            },
            {
                name: 'Thum.io',
                url: `https://image.thum.io/get/width/1200/crop/900/wait/8/fullpage/${encodeURIComponent(url)}`,
                timeout: 20000
            },
            {
                name: 'WordPress MShots',
                url: `https://s0.wp.com/mshots/v1/${encodeURIComponent(url)}?w=1200&h=900`,
                timeout: 15000
            }
        ];

        // –ü—Ä–æ–±—É–µ–º –∫–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –¥–æ –ø–µ—Ä–≤–æ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ
        for (const service of services) {
            try {
                console.log(`–ü—Ä–æ–±—É–µ–º —Å–µ—Ä–≤–∏—Å: ${service.name}`);
                
                const response = await axios.get(service.url, {
                    responseType: 'arraybuffer',
                    headers: {
                        'Accept': 'image/*',
                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
                    },
                    timeout: service.timeout,
                    validateStatus: (status) => status === 200
                });

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                const contentType = response.headers['content-type'];
                if (contentType && contentType.includes('image')) {
                    imageBuffer = Buffer.from(response.data, 'binary');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –±–µ–ª–æ–µ/–ø—É—Å—Ç–æ–µ
                    if (imageBuffer.length > 5000) { // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
                        serviceUsed = service.name;
                        break;
                    }
                }
            } catch (error) {
                console.log(`–°–µ—Ä–≤–∏—Å ${service.name} –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:`, error.message);
                continue;
            }
        }

        if (!imageBuffer) {
            throw new Error('–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –í–ö
        const uploadResult = await vk.upload.messagePhoto({
            source: {
                value: imageBuffer,
                filename: `screenshot_${Date.now()}.png`
            }
        });

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∞—Ç—Ç–∞—á–º–µ–Ω—Ç–∞
        let attachmentString = `photo${uploadResult.ownerId}_${uploadResult.id}`;
        if (uploadResult.accessKey) {
            attachmentString += `_${uploadResult.accessKey}`;
        }

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        try {
            await vk.api.messages.delete({
                message_ids: processingMsg.id,
                delete_for_all: 1
            });
        } catch (e) {}

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await message.send({
            message: `üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç ${url}`,
            attachment: attachmentString
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', error);
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (processingMsg) {
            try {
                await vk.api.messages.delete({
                    message_ids: processingMsg.id,
                    delete_for_all: 1
                });
            } catch (e) {}
        }

        if (error.message.includes('–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã')) {
            await message.send('‚ùå –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } else if (error.code === 'ECONNABORTED') {
            await message.send('‚è∞ –°–∞–π—Ç –¥–æ–ª–≥–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π URL.');
        } else {
            await message.send('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —Å–∞–π—Ç –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç—ã.');
        }
    }
});




// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
  cookieFile: path.join(__dirname, 'cookies.txt'),
  downloadDir: path.join(__dirname, 'downloaded_videos'), // –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  timeout: 300000 // 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
};

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
if (!fs.existsSync(config.downloadDir)) {
  fs.mkdirSync(config.downloadDir);
}

let videoAttachments = [];
try {
    const data = fs.readFileSync('./–≤–∏–¥–µ–æ/—Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ.json', 'utf8');
    videoAttachments = JSON.parse(data);
} catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ –∏–∑ ./–≤–∏–¥–µ–æ/—Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ.json. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.', err);
    videoAttachments = [];
}


module.exports = commands;