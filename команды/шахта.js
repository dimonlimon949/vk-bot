let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

let chats = require('../database/chats.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 


const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
    try {
      const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
      return tokens;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
      return null;
    }
  }

const tokenData3 = getToken3(); 

let val1 = tokenData3.val1
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4
let val5 = tokenData3.val5

let tokensCache = null;
      
setInterval(() => {
    tokensCache = getToken3();
    if (tokensCache) {
        val1 = tokensCache.val1;
        val2 = tokensCache.val2;
        val3 = tokensCache.val3;
        val4 = tokensCache.val4;
    }

}, 1000);

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å|—à–∞—Ö—Ç–∞|‚õè –ö–æ–ø–∞—Ç—å|@club223500959 ‚õè –ö–æ–ø–∞—Ç—å|‚õè –®–∞—Ö—Ç–∞)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      return bot(
        `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞—Ö—Ç–µ: ‚ùÑÔ∏è
‚ñ∂Ô∏è –ß—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Ä—É–¥—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ¬´–∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ/–∑–æ–ª–æ—Ç–æ/–∞–ª–º–∞–∑—ã/–º–∞—Ç–µ—Ä–∏—é/–æ–±—Å–∏–¥–∏–∞–Ω/–ø–ª–∞–∑–º—É¬ª ‚õèÔ∏è`,
        {
          keyboard: JSON.stringify({
            inline: true,
            buttons: [
              [
                {
                  action: {
                    type: "text",
                    payload: "{}",
                    label: "‚õè –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ",
                  },
                  color: "positive",
                },
              ],
            ],
          }),
        },
        {
          keyboard: JSON.stringify({
            inline: true,
            buttons: [
              [
                {
                  action: {
                    type: "text",
                    payload: "{}",
                    label: "‚õè –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ",
                  },
                  color: "positive",
                },
              ],
            ],
          }),
        },
        {
          keyboard: JSON.stringify({
            inline: true,
            buttons: [
              [
                {
                  action: {
                    type: "text",
                    payload: "{}",
                    label: "‚õè –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã",
                  },
                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
);

//–ö–Ω–æ–ø–∫–∞

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ|‚õè –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      if (!message.user.settings.titan)
        return bot(
          `–ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
        );

      if (!message.user.settings.topdon) {
        if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
          return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
      }

      if (message.user.energy < Number(message.args[1]))
        return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

      let user = message.user;

      let randzhelezo = 0;

      let t = Number(message.args[1]);

      for (let i = 0; i < t; i++) {
        let rand = utils.random(12, 50);

        randzhelezo += rand;
      }

      if (user.minertool >= 1) {
        randzhelezo *= 2;

        user.opit += Number(message.args[1]);
      }

      if (message.isChat) {
        if (chats) {
          if (chats.statuemsglvl >= 2) {
            randzhelezo *= 1.5;
          }
        }
      }

      if (typeof message.user.questminer === "number") {
        message.user.questminer += Number(message.args[1]);

        if (message.user.questminer >= 50) {
          message.user.questminer = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
          );

          message.user.c3 += 1;
        }
      }

      if (
        typeof message.user.questminer2 === "number" &&
        message.user.questallfucker === true
      ) {
        message.user.questminer2 += Number(message.args[1]);

        if (message.user.questminer2 >= 5000) {
          message.user.questminer2 = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Åa.`
          );

          message.user.c3 += 2;
        }
      }

      randzhelezo = Math.floor(Math.round(randzhelezo));

      message.user.energy -= Number(message.args[1]);

      message.user.opit += Number(message.args[1]);

      message.user.ruds.zhelezo += randzhelezo;

      return bot(`+${utils.sp(randzhelezo)} –∂–µ–ª–µ–∑–∞ ‚öôÔ∏è
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
    }
  }
);

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ|‚õè –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    let user = message.user;

    if (message.user.energy < 1) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801]),
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    let randzhelezo = utils.random(12, 50);

    if (user.minertool >= 1) {
      randzhelezo *= 2;

      user.opit += 1;
    }

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randzhelezo *= 1.5;
        }
      }
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    randzhelezo = Math.floor(Math.round(randzhelezo));

    message.user.energy -= 1;

    message.user.opit += 1;

    message.user.ruds.zhelezo += randzhelezo;

    return bot(
      `+${utils.sp(randzhelezo)} –∂–µ–ª–µ–∑–∞ ‚öôÔ∏è
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

      {
        keyboard: JSON.stringify({
          inline: true,

          buttons: [
            [
              {
                action: {
                  type: "text",

                  payload: "{}",

                  label: "‚õè –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ",
                },

                color: "positive",
              },
            ],
          ],
        }),
      }
    );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randzhelezo)} –∂–µ–ª–µ–∑–∞ ‚öôÔ∏è
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í `,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

//–∫–Ω–æ–ø–∫–∞

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ|‚õè –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.opit < 300)
      return bot(
        `—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 300 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`
      );

    if (message.user.energy < 1) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801]),
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    let randzoloto = utils.random(4, 30);

    if (message.user.minertool >= 2) {
      randzoloto *= 2;

      message.user.opit += 5;
    }

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randzoloto *= 1.5;
        }
      }
    }

    randzoloto = Math.floor(Math.round(randzoloto));

    message.user.energy -= 1;

    message.user.opit += 5;

    message.user.ruds.zoloto += randzoloto;

    if (message.user.energy > 0)
      return bot(
        `+${utils.sp(randzoloto)} –∑–æ–ª–æ—Ç–∞ üíõ
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randzoloto)} –∑–æ–ª–æ—Ç–∞ üíõ
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ|‚õè –ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      if (message.user.opit < 300)
        return bot(
          `—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 300 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`
        );

      if (!message.user.settings.titan)
        return bot(
          `–ö–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
        );

      if (!message.user.settings.topdon) {
        if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
          return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
      }

      if (message.user.energy < Number(message.args[1])) {
        message.send({
          sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801]),
        });

        return bot(
          `—É –í–∞—Å –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
        );
      }

      let user = message.user;

      let randzoloto = 0;

      let t = Number(message.args[1]);

      for (let i = 0; i < t; i++) {
        let rand = utils.random(1, 30);

        randzoloto += rand;
      }

      if (user.minertool >= 2) {
        randzoloto *= 2;

        user.opit += Number(message.args[1]) * 5;
      }

      if (message.isChat) {
        if (chats) {
          if (chats.statuemsglvl >= 2) {
            randzoloto *= 1.5;
          }
        }
      }

      if (typeof message.user.questminer === "number") {
        message.user.questminer += Number(message.args[1]);

        if (message.user.questminer >= 50) {
          message.user.questminer = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
          );

          message.user.c3 += 1;
        }
      }

      if (
        typeof message.user.questminer2 === "number" &&
        message.user.questallfucker === true
      ) {
        message.user.questminer2 += Number(message.args[1]);

        if (message.user.questminer2 >= 5000) {
          message.user.questminer2 = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
          );

          message.user.c3 += 2;
        }
      }

      randzoloto = Math.floor(Math.round(randzoloto));

      message.user.energy -= Number(message.args[1]);

      message.user.opit += Number(message.args[1]);

      message.user.ruds.zoloto += randzoloto;

      return bot(`+${utils.sp(randzoloto)} –∑–æ–ª–æ—Ç–∞ üíõ
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
    }
  }
);

//–∫–Ω–æ–ø–∫–∞

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã|‚õè –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.opit < 1500)
      return bot(
        `—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 1.500 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∑–æ–ª–æ—Ç–æ/–∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`
      );

    if (message.user.energy < 1) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801]),
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (message.user.now.kv1 && message.user.now.kv2 && message.user.now.kv3 && message.user.now.kv4 && message.user.now.kv5 && message.user.now.kv6 && !message.user.now.kv7){

      message.user.now.kv7 = true;
      message.user.balance += 100000000;
      await bot(`‚ö†Ô∏è –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ 7 –∑–∞–¥–∞–Ω–∏–µ!

–ù–∞–≥—Ä–∞–¥–∞ - 100.000.000 ${val1}

üí° –†–µ–≥—É–ª—è—Ä–Ω–æ –∫–æ–ø–∞–π—Ç–µ –∞–ª–º–∞–∑—ã –≤–µ–¥—å –∏—Ö –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å!`, {
  keyboard: JSON.stringify({
    "inline": true,
    "buttons": [
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–ø—É—Ç—å –Ω–æ–≤–∏—á–∫–∞` }),
          "label": `üëÄ –ü—É—Ç—å –Ω–æ–≤–∏—á–∫–∞`
        },
        "color": "positive"
      }],
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–∫—É—Ä—Å —Ä—É–¥—ã` }),
          "label": `üí• –ö—É—Ä—Å —Ä—É–¥—ã`
        },
        "color": "positive"
      }],
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–ø—Ä–æ–¥–∞—Ç—å –∞–ª–º–∞–∑—ã` }),
          "label": `üíé –ü—Ä–æ–¥–∞—Ç—å –∞–ª–º–∞–∑—ã`
        },
        "color": "positive"
      }],
    ]
  })
})
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    let randalmaz = utils.random(2, 18);

    if (message.user.minertool >= 3) {
      randalmaz *= 2;

      message.user.opit += 10;
    }

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randalmaz *= 1.5;
        }
      }
    }

    randalmaz = Math.floor(Math.round(randalmaz));

    message.user.energy -= 1;

    message.user.opit += 10;

    message.user.ruds.almaz += randalmaz;

    if (message.user.energy > 0)
      return bot(
        `+${utils.sp(randalmaz)} –∞–ª–º–∞–∑–æ–≤ üíé
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randalmaz)} –∞–ª–º–∞–∑–æ–≤ üíé
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã|‚õè –ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
    if (message.user.opit < 1500)
      return bot(
        `—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 1.500 –æ–ø—ã—Ç–∞. –ö–æ–ø–∞–π—Ç–µ –∑–æ–ª–æ—Ç–æ/–∂–µ–ª–µ–∑–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç! ‚ö†`
      );

    if (!message.user.settings.titan)
      return bot(
        `–ö–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
      );

    if (!message.user.settings.topdon) {
      if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
        return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
    }

    if (message.user.energy < Number(message.args[1])) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801]),
      });

      return bot(
        `—É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    let user = message.user;

    let randzoloto = 0;

    let t = Number(message.args[1]);

    for (let i = 0; i < t; i++) {
      let rand = utils.random(2, 6);

      randzoloto += rand;
    }

    if (user.minertool >= 3) {
      randzoloto *= 2;

      user.opit += Number(message.args[1]) * 10;
    }

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randzoloto *= 1.5;
        }
      }
    }

    if (message.user.now.kv1 && message.user.now.kv2 && message.user.now.kv3 && message.user.now.kv4 && message.user.now.kv5 && message.user.now.kv6 && !message.user.now.kv7){

      message.user.now.kv7 = true;
      message.user.balance += 100000000;
      await bot(`‚ö†Ô∏è –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ 7 –∑–∞–¥–∞–Ω–∏–µ!

–ù–∞–≥—Ä–∞–¥–∞ - 100.000.000 ${val1}

üí° –†–µ–≥—É–ª—è—Ä–Ω–æ –∫–æ–ø–∞–π—Ç–µ –∞–ª–º–∞–∑—ã –≤–µ–¥—å –∏—Ö –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å!`, {
  keyboard: JSON.stringify({
    "inline": true,
    "buttons": [
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–ø—É—Ç—å –Ω–æ–≤–∏—á–∫–∞` }),
          "label": `üëÄ –ü—É—Ç—å –Ω–æ–≤–∏—á–∫–∞`
        },
        "color": "positive"
      }],
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–∫—É—Ä—Å —Ä—É–¥—ã` }),
          "label": `üí• –ö—É—Ä—Å —Ä—É–¥—ã`
        },
        "color": "positive"
      }],
      [{
        "action": {
          "type": "text",
          payload: JSON.stringify({ command: `–ø—Ä–æ–¥–∞—Ç—å –∞–ª–º–∞–∑—ã` }),
          "label": `üíé –ü—Ä–æ–¥–∞—Ç—å –∞–ª–º–∞–∑—ã`
        },
        "color": "positive"
      }],
    ]
  })
})
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer += Number(message.args[1]);

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2 += Number(message.args[1]);

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    randzoloto = Math.floor(Math.round(randzoloto));

    message.user.energy -= Number(message.args[1]);

    message.user.opit += Number(message.args[1]);

    message.user.ruds.almaz += randzoloto;

    return bot(`+${utils.sp(randzoloto)} –∞–ª–º–∞–∑–æ–≤ üíé
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
  }}
);

//–∫–Ω–æ–ø–∫–∞

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é|‚õè –ö–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.opit < 50000)
      return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 50.000 –æ–ø—ã—Ç–∞. ‚ö†`);

    if (message.user.energy < 2) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801])
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    let randmateria = utils.random(2, 6);

    if (message.user.minertool >= 4) randmateria *= 2;

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randmateria *= 1.5;
        }
      }
    }

    randmateria = Math.floor(Math.round(randmateria));

    message.user.energy -= 2;

    message.user.opit += 20;

    message.user.ruds.materia += randmateria;

    if (message.isChat) {
      if (chats.statuemsglvl >= 3) {
        message.user.energy += 1;
      }
    }

    if (message.user.energy > 0)
      return bot(
        `+${utils.sp(randmateria)} –º–∞—Ç–µ—Ä–∏–∏ üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randmateria)} –º–∞—Ç–µ—Ä–∏–∏ üåå
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é|‚õè –ö–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      if (message.user.opit < 50000)
        return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 50.000 –æ–ø—ã—Ç–∞. ‚ö†`);

      if (!message.user.settings.titan)
        return bot(
          `–ö–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
        );

      if (!message.user.settings.topdon) {
        if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
          return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
      }

      let randzoloto = 0;

      let t = Number(message.args[1]);

      for (let i = 0; i < t; i++) {
        let rand = utils.random(1, 18);

        randzoloto += rand;
      }

      if (message.user.minertool >= 4) randzoloto *= 2;

      if (message.isChat) {
        if (chats) {
          if (chats.statuemsglvl >= 2) {
            randzoloto *= 1.5;
          }
        }
      }

      if (message.isChat && chats.statuemsglvl >= 3) {
        if (message.user.energy < Number(message.args[1]))
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        randzoloto = Math.floor(Math.round(randzoloto));

        message.user.energy -= Number(message.args[1]);

        message.user.opit += Number(message.args[1]) * 20;

        message.user.ruds.materia += randzoloto;
      } else {
        randzoloto = Math.floor(Math.round(randzoloto));

        if (message.user.energy < Number(message.args[1]) * 2)
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        message.user.energy -= Number(message.args[1]) * 2;

        message.user.opit += Number(message.args[1]) * 20;

        message.user.ruds.materia += randzoloto;
      }

      if (typeof message.user.questminer === "number") {
        message.user.questminer += Number(message.args[1]);

        if (message.user.questminer >= 50) {
          message.user.questminer = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
          );

          message.user.c3 += 1;
        }
      }

      if (
        typeof message.user.questminer2 === "number" &&
        message.user.questallfucker === true
      ) {
        message.user.questminer2 += Number(message.args[1]);

        if (message.user.questminer2 >= 5000) {
          message.user.questminer2 = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
          );

          message.user.c3 += 2;
        }
      }

      return bot(`+${utils.sp(randzoloto)} –º–∞—Ç–µ—Ä–∏–∏ üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
    }
  }
);

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω|‚õè –ö–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.opit < 100000)
      return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 100.000 –æ–ø—ã—Ç–∞. ‚ö†`);

    if (message.user.energy < 2) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801])
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    if (typeof message.user.questminer === "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    let randobsidian = utils.random(1, 3);

    if (message.user.minertool >= 5) randobsidian *= 2;

    if (message.isChat) {
      if (chats) {
        if (chats.statuemsglvl >= 2) {
          randobsidian *= 1.5;
        }

        if (chats.statuemsglvl >= 3) {
          message.user.energy += 1;
        }
      }
    }

    randobsidian = Math.floor(Math.round(randobsidian));

    message.user.energy -= 2;

    message.user.opit += 50;

    message.user.ruds.obsidian += randobsidian;

    if (message.user.energy > 0)
      return bot(
        `+${utils.sp(randobsidian)} –æ–±—Å–∏–¥–∏–∞–Ω–∞ üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randobsidian)} –æ–±—Å–∏–¥–∏–∞–Ω–∞ üåå
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω|‚õè –ö–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      if (message.user.opit < 100000)
        return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 100.000 –æ–ø—ã—Ç–∞. ‚ö†`);

      if (!message.user.settings.titan)
        return bot(
          `–ö–æ–ø–∞—Ç—å –æ–±—Å–∏–¥–∏–∞–Ω –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
        );

      if (!message.user.settings.topdon) {
        if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
          return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
      }

      let randzoloto = 0;

      let t = Number(message.args[1]);

      for (let i = 0; i < t; i++) {
        let rand = utils.random(1, 3);

        randzoloto += rand;
      }

      if (message.user.minertool >= 4) randzoloto *= 2;

      if (message.isChat) {
        if (chats) {
          if (chats.statuemsglvl >= 2) {
            randzoloto *= 1.5;
          }
        }
      }

      if (message.isChat && chats.statuemsglvl >= 3) {
        if (message.user.energy < Number(message.args[1]))
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        randzoloto = Math.floor(Math.round(randzoloto));

        message.user.energy -= Number(message.args[1]);

        message.user.opit += Number(message.args[1]) * 50;

        message.user.ruds.obsidian += randzoloto;
      } else {
        randzoloto = Math.floor(Math.round(randzoloto));

        if (message.user.energy < Number(message.args[1]) * 2)
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        message.user.energy -= Number(message.args[1]) * 2;

        message.user.opit += Number(message.args[1]) * 50;

        message.user.ruds.obsidian += randzoloto;
      }

      if (typeof message.user.questminer === "number") {
        message.user.questminer += Number(message.args[1]);

        if (message.user.questminer >= 50) {
          message.user.questminer = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
          );

          message.user.c3 += 1;
        }
      }

      if (
        typeof message.user.questminer2 === "number" &&
        message.user.questallfucker === true
      ) {
        message.user.questminer2 += Number(message.args[1]);

        if (message.user.questminer2 >= 5000) {
          message.user.questminer2 = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
          );

          message.user.c3 += 2;
        }
      }

      return bot(`+${utils.sp(randzoloto)} –æ–±—Å–∏–¥–∏–∞–Ω–∞ üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
    }
  }
);

cmd.hear(/^(?:–∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É|‚õè –ö–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.isChat) {
      if (chats) {
        if (chats.statuepeoplelvl <= 5) {
          return bot(
            `–°—Ç–∞—Ç—É—è –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏—è –ø–ª–∞–∑–º—ã ‚ùå`
          );
        }
      }
    } else {
      return bot(
        `–†–µ—Å—É—Ä—Å –º–æ–∂–Ω–æ –¥–æ–±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ —Å–æ —Å—Ç–∞—Ç—É–µ–π –ª—é–¥–µ–π –±–æ–ª—å—à–µ 5 —É—Ä–æ–≤–Ω—è ‚ùå`
      );
    }

    if (message.user.opit < 1000000)
      return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 1.000.000 –æ–ø—ã—Ç–∞. ‚ö†`);

    if (typeof message.user.questminer == "number") {
      message.user.questminer++;

      if (message.user.questminer >= 50) {
        message.user.questminer = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
        );

        message.user.c3 += 1;
      }
    }

    if (
      typeof message.user.questminer2 === "number" &&
      message.user.questallfucker === true
    ) {
      message.user.questminer2++;

      if (message.user.questminer2 >= 5000) {
        message.user.questminer2 = true;

        await bot(
          `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
        );

        message.user.c3 += 2;
      }
    }

    let en = 4;

    let randplazma = utils.random(1, 2);

    if (message.user.minertool >= 5) randplazma *= 2;

    if (message.isChat) {
      if (chats) {
        if (chat.statuemsglvl >= 2) {
          randplazma *= 1.5;
        }

        if (chats.statuemsglvl >= 3) {
          en = 3;
        }
      }
    }

    randplazma = Math.floor(Math.round(randplazma));

    if (message.user.energy < en) {
      message.send({
        sticker_id: utils.pick([104297, 61425, 70521, 70527, 72801])
      });

      return bot(
        `—É –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í\n\nüí§ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.`
      );
    }

    message.user.energy -= en;

    message.user.opit += 500;

    message.user.ruds.plazma += randplazma;

    if (message.user.energy > 0)
      return bot(
        `+${utils.sp(randplazma)} –ø–ª–∞–∑–º—ã üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );

    if (message.user.energy < 1) {
      return bot(
        `+${utils.sp(randplazma)} –ø–ª–∞–∑–º—ã üåå
–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —ç–Ω–µ—Ä–≥–∏—è! üîãü§í`,

        {
          keyboard: JSON.stringify({
            inline: true,

            buttons: [
              [
                {
                  action: {
                    type: "text",

                    payload: "{}",

                    label: "‚õè –ö–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É",
                  },

                  color: "positive",
                },
              ],
            ],
          }),
        }
      );
    }
  }
});

cmd.hear(
  /^(?:–∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É|‚õè –ö–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É)\s([0-9]+)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {
      if (message.isChat) {
        if (chat) {
          if (chats.statuepeoplelvl <= 5) {
            return bot(
              `–í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ —Å—Ç–∞—Ç—É—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω–∞ –¥–ª—è –∫–æ–ø–∞–Ω–∏—è –ø–ª–∞–∑–º—ã ‚ùå`
            );
          }
        }
      } else {
        return bot(
          `–†–µ—Å—É—Ä—Å –º–æ–∂–Ω–æ –¥–æ–±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ —Å–æ —Å—Ç–∞—Ç—É–µ–π –ª—é–¥–µ–π –±–æ–ª—å—à–µ 5 —É—Ä–æ–≤–Ω—è ‚ùå`
        );
      }

      if (message.user.opit < 1000000)
        return bot(`—á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ 1.000.000 –æ–ø—ã—Ç–∞. ‚ö†`);

      if (!message.user.settings.titan)
        return bot(
          `–ö–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ Titan VIP\n‚ùì–ü–æ–∫—É–ø–∫–∞: –î–æ–Ω–∞—Ç`
        );

      if (!message.user.settings.topdon) {
        if (Number(message.args[1]) < 1 || Number(message.args[1]) > 10)
          return bot(`–ë–æ–ª—å—à–µ 10 –∫–æ–ø–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.`);
      }

      let randzoloto = 0;

      let t = Number(message.args[1]);

      for (let i = 0; i < t; i++) {
        let rand = utils.random(1, 2);

        randzoloto += rand;
      }

      if (message.user.minertool >= 4) randzoloto *= 2;

      if (message.isChat) {
        if (chats) {
          if (chats.statuemsglvl >= 2) {
            randzoloto *= 1.5;
          }
        }
      }

      if (message.isChat && chats.statuemsglvl >= 3) {
        if (message.user.energy < Number(message.args[1]) * 3)
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        randzoloto = Math.floor(Math.round(randzoloto));

        message.user.energy -= Number(message.args[1]) * 3;

        message.user.opit += Number(message.args[1]) * 500;

        message.user.ruds.plazma += randzoloto;
      } else {
        randzoloto = Math.floor(Math.round(randzoloto));

        if (message.user.energy < Number(message.args[1]) * 4)
          return bot(`‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);

        message.user.energy -= Number(message.args[1]) * 4;

        message.user.opit += Number(message.args[1]) * 500;

        message.user.ruds.plazma += randzoloto;
      }

      if (typeof message.user.questminer === "number") {
        message.user.questminer += Number(message.args[1]);

        if (message.user.questminer >= 50) {
          message.user.questminer = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 50 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 1 –î–æ–Ω–∞—Ç-–∫–µ–π—Å.`
          );

          message.user.c3 += 1;
        }
      }

      if (
        typeof message.user.questminer2 === "number" &&
        message.user.questallfucker === true
      ) {
        message.user.questminer2 += Number(message.args[1]);

        if (message.user.questminer2 >= 5000) {
          message.user.questminer2 = true;

          await bot(
            `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã 5000 —Ä–∞–∑ –ø–æ–∫–æ–ø–∞–ª–∏ —Ä—É–¥—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ üì¶ 2 –î–æ–Ω–∞—Ç-–∫–µ–π—Å–∞.`
          );

          message.user.c3 += 2;
        }
      }

      return bot(`+${utils.sp(randzoloto)} –ø–ª–∞–∑–º—ã üåå
‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${message.user.energy}, –æ–ø—ã—Ç: ${utils.sp(message.user.opit)}`);
    }
  }
);











module.exports = commands;
