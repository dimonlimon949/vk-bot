let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

cmd.hear(/^(?:—Ä–µ—Ñ)\s([^]+)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    try {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ ID –∏–ª–∏ —Å—Å—ã–ª–∫–∏
      let user;
      const input = message.args[1];
      const referrerInfo = `–£–∫–∞–∑–∞–ª: @id${message.user.id} (${message.user.tag})`;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ–≤–æ–π ID
      if (/^\d+$/.test(input)) {
        user = double.find(x => x.uid === Number(input));
      } 
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫—É VK
      else if (/^(?:https?:\/\/)?(?:vk\.com\/)/i.test(input)) {
        const screenName = input.replace(/(?:https?:\/\/)?(?:vk\.com\/)/gi, "");
        const res = await vk.api.utils.resolveScreenName({ screen_name: screenName });
        if (res && res.object_id) {
          user = double.find(x => x.id === res.object_id);
        }
      }

      // –í–∞–ª–∏–¥–∞—Ü–∏–∏
      if (!user) return bot("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω");
      if (user.id == message.user.id) return bot("–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–∞–º–∏ —Å–µ–±—è");
      if (message.user.ref) return bot("–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞");

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
      message.user.ref = true;
      const multiply = utils.pick([1, 2, 3, 4]);
      user.refcount += 1;
      user.fertilizer += 2;
      user.water += 2;

      // –ù–∞–≥—Ä–∞–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
      let rewardMessage = "";
      
      if (user.refcount < 10) {
        switch (multiply) {
          case 1:
            user.c3 += 1;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω 1 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å";
            break;
          case 2:
            user.balance += 10000000;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000 $";
            break;
          case 3:
            user.c2 += 3;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–∞";
            break;
          case 4:
            user.rubli += 1;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 1 —Ä—É–±–ª—å";
            break;
        }
      } 
      else if (user.refcount >= 10 && user.refcount < 100) {
        switch (multiply) {
          case 1:
            user.c3 += 2;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞";
            break;
          case 2:
            user.balance += 20000000;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 20.000.000 $";
            break;
          case 3:
            user.c2 += 5;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 5 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤";
            break;
          case 4:
            user.rubli += 2;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 2 —Ä—É–±–ª—è";
            break;
        }
      } 
      else if (user.refcount >= 100 && user.refcount != 666) {
        switch (multiply) {
          case 1:
            user.c3 += 3;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞";
            break;
          case 2:
            user.balance += 50000000;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000.000 $";
            break;
          case 3:
            user.c2 += 10;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 –ó–æ–ª–æ—Ç—ã—Ö-–∫–µ–π—Å–æ–≤";
            break;
          case 4:
            user.rubli += 3;
            rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 —Ä—É–±–ª—è";
            break;
        }
      }

      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ 666 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
      if (user.refcount == 666) {
        user.stars5 = true;
        rewardMessage = "–Ω–∞—á–∏—Å–ª–µ–Ω–∞ –ª—É—á—à–∞—è –∑–≤–µ–∑–¥–∞";
      }

      // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∫–∞–∂–¥—ã–µ 20 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
      if (user.refcount % 20 == 0) {
        user.c6 += 1;
        if (user.notifications) {
          await vk.api.messages.send({
            user_id: user.id,
            message: `–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n` +
              `‚ñ∂ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω 1 –°–µ–∫—Ä–µ—Ç–Ω—ã–π-–∫–µ–π—Å –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n` +
              `${referrerInfo}\n` +
              `üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`,
            keyboard: JSON.stringify({
              "inline": true,
              "buttons": [[{
                "action": {
                  "type": "text",
                  "payload": JSON.stringify({ command: "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª" }),
                  "label": "üîï"
                },
                "color": "negative"
              }]]
            }),
            random_id: 0
          });
        }
      }

      // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
      if (user.notifications && rewardMessage) {
        await vk.api.messages.send({
          user_id: user.id,
          message: `–£–í–ï–î–û–ú–õ–ï–ù–ò–ï ‚úÖ\n` +
            `‚ñ∂ –í–∞–º ${rewardMessage} –∑–∞ —Ç–æ —á—Ç–æ –∏–≥—Ä–æ–∫ —É–∫–∞–∑–∞–ª, —á—Ç–æ –≤—ã –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏!\n` +
            `${referrerInfo}\n` +
            `üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`,
          keyboard: JSON.stringify({
            "inline": true,
            "buttons": [[{
              "action": {
                "type": "text",
                "payload": JSON.stringify({ command: "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª" }),
                "label": "üîï"
              },
              "color": "negative"
            }]]
          }),
          random_id: 0
        });
      }

      // –ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è —É–∫–∞–∑–∞–≤—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
      const bonus = input.match(/^\d+$/) ? 2 : 2; // 2 –∑–∞ ID, 2 –∑–∞ —Å—Å—ã–ª–∫—É
      message.user.c3 += bonus;
      
      return bot(`‚úÖ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${bonus} –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –∏–≥—Ä–æ–∫–∞ ‚úÖ`);

    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:", error);
      return bot("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞");
    }
  }
});

cmd.hear(
  /^(?:—Ä–µ—Ñ|üèÜ —Ä–µ—Ñ–µ—Ä–∞–ª|—Ä–µ—Ñ–µ—Ä–∞–ª|@club223500959 —Ä–µ—Ñ|@club223500959 —Ä–µ—Ñ–µ—Ä–∞–ª|—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 1) {

      const groupInfo = await vk.api.call('groups.getById', {
        access_token: tokenData.token,
        v: '5.131',
      });

      if (!groupInfo || groupInfo.length === 0) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
      }

      const groupId = groupInfo[0].id;


      let smileng = utils.pick([
        `üå∑`,
        `üå∏`,
        `üåπ`,
        `üå∫`,
        `üåº`,
        `üíê`,
        `‚ù§Ô∏è`,
        `üíì`,
        `üíï`,
      ]); //utils.pick([`‚ùÑÔ∏è`,`üéÑ`,`‚òÉÔ∏è`,`üéÖ`]);

      let ref = `https://vk.me/club${groupId}?ref=${message.senderId}&ref_source=${message.senderId}`;

      let refka = await vk.api.utils.getShortLink({ url: ref });

      return bot(`–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ ${utils.sp(
        message.user.refcount
      )} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ${smileng}

üí∞ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–∏–∑–æ–≤:
üë• –î–æ 10 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö - –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 1 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å, 3 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–∞, 1 —Ä—É–±–ª—å, 10.000.000 $
üë• –î–æ 100 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö- –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 2 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞, 20.000.000 $ –∏–ª–∏ 5 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–æ–≤, 2 —Ä—É–±–ª—è
üë• –î–æ 10000 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö - –º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å: 3 –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–∞, 50.000.000 $ , 10 –∑–æ–ª–æ—Ç—ã—Ö –∫–µ–π—Å–æ–≤, 3 —Ä—É–±–ª—è
üë• –ó–∞ –∫–∞–∂–¥–æ–≥–æ 20 –∏–≥—Ä–æ–∫–∞ –¥–∞—ë—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–µ–π—Å
üë• –ó–∞ 666 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–≤–µ–∑–¥—É ¬´–î–æ–Ω–∞—Ç–Ω—ã–π –≥–∏–≥–∞–Ω—Ç¬ª, –ø—Ä–∏–±—ã–ª—å: 30 –ß–∞–∫–æ–†—É–±/—á–∞—Å

üìå –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${refka.short_url}

`);
    }
  }
);



let STATIC_REF_LINK = 'https://vk.me/club228340301?ref=–±–æ–≥–∞—á';

cmd.hear(
  /^(?:—Å–∏—Å—Ç–µ–º–∞)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 4) {
      let ref = STATIC_REF_LINK
      let refka = await vk.api.utils.getShortLink({ url: ref });

      return bot(`
üìå –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: ${refka.short_url}
`);
    }
  }
);

cmd.hear(
  /^(?:—Å–±—Ä–æ—Å)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type === 4) {
      double.forEach(user => {
        user.perexod = false;
      });
      return message.send("‚ôª –ü–µ—Ä–µ—Ö–æ–¥—ã —Å–±—Ä–æ—à–µ–Ω—ã!");
    }
  }
);

cmd.hear(
  /^(?:—Å–∞–º–æ–±–∞–Ω)$/i,
  async (message, bot) => {
    if (!message.isChat || message.chat.type >= 1) {
      message.user.bans.ban = true
      message.user.bans.reason = '–°–∞–º–æ–±–∞–Ω.'
      return bot(`
–ì–æ—Ç–æ–≤–æ.
`);
    }
  }
);



module.exports = commands;
