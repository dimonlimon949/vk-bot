  let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')
let chats = require('../database/chats.json')
let log = require('../database/log.json')
let botinfo = require('../database/botinfo.json')
let clans = require('../database/clans.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const forbiddenTitles = [
  "–ë–∏–∑–Ω–µ—Å–º–µ–Ω", 
  "üî•Supportüî•",
  "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", 
  "–£–¥–∞–ª—ë–Ω–Ω—ã–π —Ç–∏—Ç—É–ª"









];


const tokenData = getToken();


const tokensFilePath4 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞.json';

const tokensFilePath2 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–∏–¥ –±–µ—Å–µ–¥.json';

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken4() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath4, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken2() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath2, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

function getToken3() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData2 = getToken2(); 
const tokenData3 = getToken3(); 
const tokenData4 = getToken4(); 

const tokensFilePath5 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Å—Å—ã–ª–∫–∏ —á–∞—Ç–æ–≤.json';

function getToken5() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath5, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData5 = getToken5(); 


let adminka = tokenData5.admin

const coaf = tokenData2.coaf
let val1 = tokenData3.val1 
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4


const chatlogi = tokenData2.chatlogi;
const spoler = tokenData4;

const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ (–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑ —Ñ–∞–π–ª–∞)
function resetUserData(user) {
    try {
        const defaultData = JSON.parse(fs.readFileSync('./database/–æ–±–Ω—É–ª.json', 'utf8'));

        for (const key in defaultData) {
            if (defaultData.hasOwnProperty(key)) {
                if (typeof defaultData[key] === 'object' && defaultData[key] !== null && !Array.isArray(defaultData[key])) {
                    // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ - –æ–±—ä–µ–∫—Ç, —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –µ–≥–æ
                    if (typeof user[key] !== 'object' || user[key] === null || Array.isArray(user[key])) {
                        user[key] = {}; //  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞-–æ–±—ä–µ–∫—Ç–∞
                    }
                    Object.assign(user[key], defaultData[key]);
                } else {
                    user[key] = defaultData[key];
                }
            }
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±–Ω—É–ª.json:', error);

    }
}


cmd.hear(/^–ø–æ–∏—Å–∫\s(.*)$/i, async (message, bot) => {

  if (message.user.settings.adm < 3) return bot(`–Ω—É–∂–µ–Ω 3 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`);

  const searchTerm = message.args[1]; // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã

  let text = ``;
  let t = 0;

  // –ò—â–µ–º –∏–≥—Ä–æ–∫–æ–≤, —á—å–∏ –Ω–∏–∫–∏ *—Å–æ–¥–µ—Ä–∂–∞—Ç* –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
  double.filter(x => x.tag.toLowerCase().includes(searchTerm.toLowerCase())).map(x => { // –£–±–∏—Ä–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É

    t = t + 1;

    text += `@id${x.id}(${x.tag}) - ${x.uid} uid\n`;

  });

  let smileng = utils.pick([`üå∑`,`üå∏`,`üåπ`,`üå∫`,`üåº`,`üíê`,`‚ù§Ô∏è`,`üíì`,`üíï`]);

  if (t === 0) {
    return bot(`–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ —Å –Ω–∏–∫–æ–º, –ø–æ—Ö–æ–∂–∏–º –Ω–∞ "${searchTerm}"`);
  }

  bot(`–Ω–∞—à–µ–ª —Å—Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–æ–≤ —Å –Ω–∏–∫–æ–º, –ø–æ—Ö–æ–∂–∏–º –Ω–∞ "${searchTerm}": ${t} ${smileng}\n\n${text}`);

});


cmd.hear(/^(?:-–≥–±)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
  
  if (message.user.settings.adm < 2) return bot(`–Ω—É–∂–µ–Ω —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)

    message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
    message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
    message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
    message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
  
    if(!Number(message.args[2])) return;
    message.args[2] = Math.floor(Number(message.args[2]));
  
    if(message.args[2] <= 0) return bot(`—É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å.`)
  
    
    else if(message.args[2])
    {
      let user = double.find(x=> x.uid === Number(message.args[1]));
      if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. `);
  

      user.balance2 -= message.args[2];
      await bot(`–≤—ã –∑–∞–±—Ä–∞–ª–∏ —É [id${user.id}|${user.tag}] ${utils.sp(message.args[2])} ${val4}`);
        }
          try{
     vk.api.messages.send({chat_id: chatlogi, message: `üî± Super - [id${message.user.id}|${message.user.tag}]
üÜî –ó–∞–±—Ä–∞–ª —É –∏–≥—Ä–æ–∫–∞ - ${ Number(message.args[1])} 
üëë –°—É–º–º–∞ ${val4} - ${utils.sp(message.args[2])} `, random_id: 0})
          }catch(e) {
  console.log('–ó–∞–±—Ä–∞–ª–∏ ${val4}.')
};
});

cmd.hear(/^(?:–≥–±)(?:\s+([0-9]+)\s*(.*))?$/i, async (message, bot) => {
  try {
    if (message.user.settings.adm < 2) return bot(`–Ω—É–∂–µ–Ω —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`);

    // –ü–æ–ª—É—á–µ–Ω–∏–µ UID –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    const targetUid = message.args[1];

    // –ï—Å–ª–∏ —Å—É–º–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞
    if (!message.args[2]) {
      return bot(`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ì–± <uid> <—Å—É–º–º–∞>.`);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã
    let sumString = message.args[2];
    sumString = sumString.replace(/(\.|\,)/ig, ''); // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –∏–ª–∏ –∑–∞–ø—è—Ç—ã—Ö
    sumString = sumString.replace(/(–∫|k)/ig, '000'); // –ó–∞–º–µ–Ω–∞ '–∫' –Ω–∞ '000'
    sumString = sumString.replace(/(–º|m)/ig, '000000'); // –ó–∞–º–µ–Ω–∞ '–º' –Ω–∞ '000000'

    let sum = Math.floor(Number(sumString)); // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —á–∏—Å–ª–æ
    if (isNaN(sum) || sum <= 0) {
      return bot(`–î–ª—è –≤—ã–¥–∞—á–∏ –≤–∞–ª—é—Ç—ã –Ω–∞–ø–∏—à–∏—Ç–µ - –ì–± <uid> 100.`);
    }

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ UID
    let user = double.find(x => x.uid === Number(targetUid));
    if (!user) {
      return bot(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å UID ${targetUid} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è limgbi, –µ—Å–ª–∏ –æ–Ω–æ undefined
    if (message.user.limgbi === undefined) {
      message.user.limgbi = 0;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ null –¥–ª—è limgb (–±–µ–∑–ª–∏–º–∏—Ç)
    const limgb = message.user.limgb === null ? Infinity : message.user.limgb;

    let availableLimit = limgb - message.user.limgbi;

    if (sum > availableLimit) {
        return bot(`‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—ã–¥–∞—á–∏ ${val4}. –í—ã –º–æ–∂–µ—Ç–µ –µ—â–µ –≤—ã–¥–∞—Ç—å ${availableLimit} GB.`);
    }

    // –í—ã–¥–∞—á–∞ —Å—É–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    user.balance2 += sum; 
    message.user.limgbi += sum; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —É –∞–¥–º–∏–Ω–∞
    
    await message.send("‚úÖ");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ ID –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è
    if (user.id > 0) {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await vk.api.messages.send({
        random_id: 0,
        user_id: user.id,
        message: `${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : message.user.tag}, ${utils.sp(sum, true)} ${val4} –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –±–∞–ª–∞–Ω—Å! üöÄ`
      });
    } else {
      console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å UID ${targetUid}, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.`);
    }
    
    await vk.api.messages.send({
        chat_id: chatlogi,
        message: `üë§–ê–¥–º–∏–Ω: [id${message.user.id}|${message.user.tag}]\nüí∞ –í—ã–¥–∞–ª ${val4} [id${user.id}|${user.tag}] –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ ${sum}`,
        random_id: 0
    });

  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ GB:", e);
    bot(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ GB: ${e.message}`);
  }
});

cmd.hear(/^(?:—Å–ø—Ä–µ–¥)$/i, async (message, bot) => {
  if (message.user.settings.adm < 5) return bot(`–Ω—É–∂–µ–Ω 5 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)

  let senderId;

  // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ

  if (message.hasReplyMessage) {
    senderId = message.replyMessage.senderId;

    let user = double.find((x) => x.id === senderId);

    if (!user) return bot(`–ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–≥—Ä–æ–∫–∞!`);

    user.astats.warn -= 1;

    if (user.astats.warn < 0) {
      user.astats.warn = 0;
    }

    return bot(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç–æ! ‚úÖ
‚ö†Ô∏è –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ç–µ–ø–µ—Ä—å ${user.astats.warn}/5 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!`);
  } else if (message.hasForwards) {
    senderId = message.forwards[0].senderId;

    let user = double.find((x) => x.id === senderId);

    if (!user) return bot(`–ù–µ–≤–µ—Ä–Ω—ã–π URL –∏–≥—Ä–æ–∫–∞!`);

    user.astats.warn -= 1;

    if (user.astats.warn < 0) {
      user.astats.warn = 0;
    }

    return bot(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç–æ! ‚úÖ
‚ö†Ô∏è –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ç–µ–ø–µ—Ä—å ${user.astats.warn}/5 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!`);
  }
});


cmd.hear(/^(?:–≤–ø—Ä–µ–¥)$/i, async (message, bot) => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è –∞–¥–º–∏–Ω–∞ —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
  if (message.user.settings.adm < 5) return bot("‚ùå –ù—É–∂–µ–Ω 5 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!");

  let target;
  if (message.hasReplyMessage) {
    target = double.find(x => x.id === message.replyMessage.senderId);
  } else if (message.hasForwards) {
    target = double.find(x => x.id === message.forwards[0].senderId);
  } else {
    return bot("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ!");
  }

  if (!target) return bot("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–∞–Ω
  if (target.bans?.ban === true) {
    const remainingTime = target.bans.bantimer 
      ? Math.max(0, target.bans.bantimer - Date.now()) 
      : null;
    
    let banInfo = [
      "üö´ –ò–≥—Ä–æ–∫ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!",
      remainingTime !== null 
        ? `‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: ${Math.floor(remainingTime / 3600000)}—á ${Math.floor((remainingTime % 3600000) / 60000)}–º`
        : "‚è≥ –°—Ä–æ–∫: –±–µ—Å—Å—Ä–æ—á–Ω–æ",
      `üìå –ü—Ä–∏—á–∏–Ω–∞: ${target.bans.reason || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"}`
    ].join("\n");
    
    return bot(banInfo);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
  target.astats.warn = (target.astats.warn || 0) + 1;
  target.astats.warnCount = target.astats.warnCount || 0;

  // –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
  if (target.astats.warn >= 3) {
    target.astats.warn = 0;
    target.astats.warnCount += 1;
    
    const isAdmin = target.settings.adm >= 1;
    if (isAdmin) target.settings.adm = 0;

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –±–∞–Ω–∞
    let banDuration, banMessage;
    switch(target.astats.warnCount) {
      case 1: banDuration = 3600000; banMessage = "1 —á–∞—Å"; break;
      case 2: banDuration = 86400000; banMessage = "1 –¥–µ–Ω—å"; break;
      case 3: banDuration = 604800000; banMessage = "1 –Ω–µ–¥–µ–ª—é"; break;
      case 4: banDuration = 2629744000; banMessage = "1 –º–µ—Å—è—Ü"; break;
      default: banDuration = null; banMessage = "–±–µ—Å—Å—Ä–æ—á–Ω–æ";
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–Ω–∞
    target.bans = {
      ban: true,
      reason: `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω (3/3 –ø—Ä–µ–¥., ${target.astats.warnCount} –Ω–∞—Ä—É—à–µ–Ω–∏–µ)`,
      bantimer: banDuration ? Date.now() + banDuration : null
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã —Ä–∞–∑–±–∞–Ω–∞
    const unbanDate = banDuration 
      ? new Date(target.bans.bantimer).toLocaleString("ru-RU", {
          day: 'numeric',
          month: 'numeric',
          year: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        })
      : "–Ω–∏–∫–æ–≥–¥–∞";

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    await bot([
      `‚ö†Ô∏è ${isAdmin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ò–≥—Ä–æ–∫'} –ø–æ–ª—É—á–∏–ª 3/3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!`,
      isAdmin ? "üö´ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ —Å–Ω—è—Ç—ã!" : "",
      `‚è∞ –í—ã–¥–∞–Ω –±–∞–Ω: ${banMessage}`,
      `üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π: ${target.astats.warnCount}`,
      `üìÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${unbanDate}`
    ].filter(Boolean).join("\n"));

    await vk.api.messages.send({
      user_id: target.id,
      message: [
        "üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!",
        `–ü—Ä–∏—á–∏–Ω–∞: 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (${target.astats.warnCount} –Ω–∞—Ä—É—à–µ–Ω–∏–µ)`,
        `–°—Ä–æ–∫: ${banMessage}`,
        `–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${unbanDate}`,
        isAdmin ? "\n‚ö†Ô∏è –í–∞—à–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–Ω—è—Ç—ã" : ""
      ].filter(Boolean).join("\n"),
      random_id: 0
    });

    await vk.api.messages.send({
      chat_id: chatlogi,
      message: [
        `üìõ ADM-LOG: –í—ã–¥–∞–Ω –±–∞–Ω –∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`,
        `üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @id${message.user.id} (${message.user.tag})`,
        `üí¢ –ù–∞—Ä—É—à–∏—Ç–µ–ª—å: @id${target.id} (${target.tag})`,
        `üìä –°—Ç–∞—Ç—É—Å: ${isAdmin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ò–≥—Ä–æ–∫'}`,
        `üîû –ù–∞—Ä—É—à–µ–Ω–∏–π: ${target.astats.warnCount}`,
        `‚è±Ô∏è –°—Ä–æ–∫: ${banMessage}`,
        isAdmin ? "‚ùó –°–Ω—è—Ç—ã –ø—Ä–∞–≤–∞" : ""
      ].filter(Boolean).join("\n"),
      random_id: 0
    });

    return;
  }

  // –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
  return bot([
    `‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ!`,
    `üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${target.astats.warn}/3`,
    target.astats.warn >= 2 ? "üî¥ –ï—â–µ 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - –±–∞–Ω!" : ""
  ].filter(Boolean).join("\n"));
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç –≤–∫–ª)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 3) return bot(`–Ω—É–∂–µ–Ω 3 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)


  let user = users.find((x) => x.uid === Number(message.args[1]));

  if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

  user.answeraccess = true;

  await message.send(
    `‚ñ∂Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä/–∞–≥–µ–Ω—Ç @id${user.id} (${user.tag}) –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–≤–µ—Ç–∞–º! –¢–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä–µ–ø–æ—Ä—Ç—ã üò∏`
  );
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç –≤—ã–∫–ª)\s([0-9]+)$/i, async (message, bot) => {
  if (message.user.settings.adm < 3) return bot(`–Ω—É–∂–µ–Ω 3 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)

  let user = users.find((x) => x.uid === Number(message.args[1]));

  if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

  user.answeraccess = false;

  await message.send(
    `‚ñ∂Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É/–∞–≥–µ–Ω—Ç—É @id${user.id} (${user.tag}) –±—ã–ª –∑–∞–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–≤–µ—Ç–∞–º! –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä–µ–ø–æ—Ä—Ç—ã ‚ùåüò¢`
  );
});

cmd.hear(/^(?:–æ–±–Ω—É–ª–∏—Ç—å|–æ–±–Ω—É–ª)\s([0-9]+)$/i, async (message, bot) => {


    const targetUID = Number(message.args[1]);

    if (isNaN(targetUID)) {
        return bot("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π UID –∏–≥—Ä–æ–∫–∞ (—á–∏—Å–ª–æ).");
    }

   if (message.user.settings.adm < 3) return bot(`–Ω—É–∂–µ–Ω 3 —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)

    let user = double.find((x) => x.uid === targetUID);

    if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

    // –û–±–Ω—É–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏—é
    resetUserData(user);

     // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª
     try {
        fs.writeFileSync('./database/users.json', JSON.stringify(double, null, 2)); // null, 2 –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
        return bot("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö! –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.");
    }

    await vk.api.messages.send({
        chat_id: chatlogi,
        random_id: 0,
        message: `‚õî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä @id${message.user.id} (${message.user.tag})[ID: ${message.user.uid}] –æ–±–Ω—É–ª–∏–ª –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag})[ID: ${user.uid}] ‚ùÑÔ∏è`,
    });

    return bot(
        `–í—ã –æ–±–Ω—É–ª–∏–ª–∏ [id${user.id}|–∏–≥—Ä–æ–∫–∞] —É—Å–ø–µ—à–Ω–æ. –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –±—ã–ª–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å—Ç–∞—Ä—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫–æ–≤).`
    );

});






module.exports = commands;
