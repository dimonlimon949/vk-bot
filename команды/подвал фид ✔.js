let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 


cmd.hear(/^(?:–ö—É–ø–∏—Ç—å –ø–æ–¥–≤–∞–ª)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    if (message.user.sprcoin < 100)
      return bot(`–ü–æ–¥–≤–∞–ª –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞ 100 SpringCoins`);

    if (message.user.realty.home === 0) return bot(`üî∏–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–º–∞`);

    if (message.user.realty.basement) return bot(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–æ–¥–≤–∞–ª! ‚òÉÔ∏è`);

    message.user.sprcoin -= 100;

    message.user.realty.basement = true;

    bot(`–≤—ã –∫—É–ø–∏–ª–∏ –ø–æ–¥–≤–∞–ª! ‚úÖ`);

    message.send({ sticker_id: 108222 });
  }
});

cmd.hear(/^(?:—Ñ–∏–¥)\s(.*)$$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!message.user.settings.imperator)
      return bot(`–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è << –ò–º–ø–µ—Ä–∞—Ç–æ—Ä >> ! üîπ`);

    // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    const fakeId = message.args[1];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—É—Å—Ç –ª–∏ ID –∏–ª–∏ –µ—Å–ª–∏ –µ–≥–æ –¥–ª–∏–Ω–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 8 —Å–∏–º–≤–æ–ª–æ–≤
    if (fakeId.length < 1 || fakeId.length > 20)
      return bot(`ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 1 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –±—É–∫–≤—ã!`);
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π ID
    message.user.astats.fakeid = fakeId;

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    return bot(`–§–µ–π–∫–æ–≤—ã–π ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! üòà\nüÜî ¬ª ID: ${fakeId}`);
  }
});



module.exports = commands;
