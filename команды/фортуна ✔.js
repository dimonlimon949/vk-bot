let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
    try {
      const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
      return tokens;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
      return null;
    }
  }

const tokenData3 = getToken3(); 

let val1 = tokenData3.val1
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4
let val5 = tokenData3.val5

let tokensCache = null;
      
setInterval(() => {
    tokensCache = getToken3(); 
    if (tokensCache) {
        val1 = tokensCache.val1; 
        val2 = tokensCache.val2; 
        val3 = tokensCache.val3; 
        val4 = tokensCache.val4; 
    }
  }, 1000);



cmd.hear(/^(?:—Ñ–æ—Ä—Ç—É–Ω–∞|üé° –§–æ—Ä—Ç—É–Ω–∞|‚è≤ –§–æ—Ä—Ç—É–Ω–∞)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    return bot(
      `üé∞ *–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã* üé∞

üéÅ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–¥–∫–æ—Å—Ç–µ–π –ø—Ä–∏–∑–æ–≤:
‚ñ∏ ‚óã –û–ë–´–ß–ù–´–ô (50%) - –±–∏–ª–µ—Ç—ã, –æ–ø—ã—Ç
‚ñ∏ ‚ú© –†–ï–î–ö–ò–ô (30%) - —ç–ª–∏—Ç–Ω—ã–µ –ø–æ—Å—ã–ª–∫–∏, –¥–æ–Ω–∞—Ç-–∫–µ–π—Å—ã
‚ñ∏ ‚ú™ –°–í–ï–†–•–†–ï–î–ö–ò–ô (12%) - Starr Drops
‚ñ∏ ‚ú¶ –≠–ü–ò–ß–ï–°–ö–ò–ô (5%) - ${val1}
‚ñ∏ ‚úß –ú–ò–§–ò–ß–ï–°–ö–ò–ô (2%) - ${val4}
‚ñ∏ ‚òÖ –õ–ï–ì–ï–ù–î–ê–†–ù–´–ô (1%) - VIP —Å—Ç–∞—Ç—É—Å

üî• *–ß–µ–º –≤—ã—à–µ —Ä–µ–¥–∫–æ—Å—Ç—å - —Ç–µ–º —Å–ª–æ–∂–Ω–µ–µ –≤—ã–±–∏—Ç—å!*
üíé –§–æ—Ä—Ç—É–Ω–∞ –¥–∞–µ—Ç —à–∞–Ω—Å –∫–∞–∂–¥–æ–º—É, –Ω–æ —Ç–æ–ª—å–∫–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç –ª—É—á—à–∏–µ –Ω–∞–≥—Ä–∞–¥—ã!

üé´ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∞: 10 –±–∏–ª–µ—Ç–æ–≤`,
      { 
        attachment: `photo-211261524_457239021`,
        keyboard: JSON.stringify({
          inline: true,
          buttons: [[{
            action: {
              type: "text",
              payload: JSON.stringify({ command: `—Ñ–æ—Ä—Ç—É–Ω–∞ –µ–±–∞—Ç—å` }),
              label: "üé° –ö—Ä—É—Ç–∏—Ç—å –§–æ—Ä—Ç—É–Ω—É [10üé´]",
            },
            color: "positive",
          }]]
        }),
      }
    );
  }
});

cmd.hear(/^(?:—Ñ–æ—Ä—Ç—É–Ω–∞ –µ–±–∞—Ç—å)$/i, async (message, bot) => {
  if (!message.isChat || message.chat.type === 1) {
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —à–∞–Ω—Å–æ–≤
    const roll = Math.random() * 100;
    let prize, rarityData;

    if (roll < 1) {          // 1% - –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π (VIP)
      prize = 6;
      rarityData = { name: "‚òÖ –õ–ï–ì–ï–ù–î–ê–†–ù–´–ô", color: '#FFEB3B', emoji: "üåü", chance: 1 };
    } else if (roll < 3) {   // 2% - –ú–∏—Ñ–∏—á–µ—Å–∫–∏–π (val4)
      prize = 7;
      rarityData = { name: "‚úß –ú–ò–§–ò–ß–ï–°–ö–ò–ô", color: '#F44336', emoji: "üî•", chance: 2 };
    } else if (roll < 8) {   // 5% - –≠–ø–∏—á–µ—Å–∫–∏–π
      prize = 4;
      rarityData = { name: "‚ú¶ –≠–ü–ò–ß–ï–°–ö–ò–ô", color: '#9C27B0', emoji: "üíé", chance: 5 };
    } else if (roll < 20) {  // 12% - –°–≤–µ—Ä—Ö—Ä–µ–¥–∫–∏–π
      prize = 2;
      rarityData = { name: "‚ú™ –°–í–ï–†–•–†–ï–î–ö–ò–ô", color: '#2196F3', emoji: "üîÆ", chance: 12 };
    } else if (roll < 50) {  // 30% - –†–µ–¥–∫–∏–π
      prize = utils.random(1, 3) === 1 ? 1 : 3;
      rarityData = { name: "‚ú© –†–ï–î–ö–ò–ô", color: '#4CAF50', emoji: "üçÄ", chance: 30 };
    } else {                 // 50% - –û–±—ã—á–Ω—ã–π
      prize = utils.random(1, 2) === 1 ? 5 : 8;
      rarityData = { name: "‚óã –û–ë–´–ß–ù–´–ô", color: '#9E9E9E', emoji: "‚ñ´Ô∏è", chance: 50 };
    }

    if (message.user.bilet < 10) {
      return bot(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∞! –ù—É–∂–Ω–æ 10üé´`);
    }

    message.user.bilet -= 10;
    let rewardText = "";
    const keyboard = createKeyboard();

    switch(prize) {
      case 1: {
        const count = utils.random(1, 3);
        message.user.possilka2 += count;
        rewardText = `—ç–ª–∏—Ç–Ω–∞—è(-—ã–µ) –ø–æ—Å—ã–ª–∫—É(-–∏) (–•${count}) üì¶`;
        break;
      }
      case 2: {
        message.user.c4 += 1;
        rewardText = `Starr Drops`;
        break;
      }
      case 3: {
        const count = utils.random(1, 2);
        message.user.c3 += count;
        rewardText = `–¥–æ–Ω–∞—Ç-–∫–µ–π—Å(-—ã, -–æ–≤) (–•${count})`;
        break;
      }
      case 4: {
        const amount = utils.random(1000000, 50000000);
        message.user.balance += amount;
        rewardText = `${utils.sp(amount)} ${val1}`;
        break;
      }
      case 5: {
        const count = utils.random(1, 15);
        message.user.bilet += count;
        rewardText = `${count} –±–∏–ª–µ—Ç–æ–≤ üé´`;
        break;
      }
      case 6: {
        if (message.user.settings.vip) {
          message.user.bilet += 20;
          rewardText = `VIP —Å—Ç–∞—Ç—É—Å (–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è 20 –±–∏–ª–µ—Ç–æ–≤)`;
        } else {
          activateVip(message.user);
          rewardText = `VIP –°–¢–ê–¢–£–° –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!`;
        }
        break;
      }
      case 7: {
        const amount = utils.random(1, 20000);
        message.user.balance2 += amount;
        rewardText = `${utils.sp(amount)} ${val4}`;
        break;
      }
      case 8: {
        const amount = utils.random(10, 2000);
        message.user.opit += amount;
        rewardText = `${utils.sp(amount)} –æ–ø—ã—Ç–∞`;
        break;
      }
    }

    const randEmoji = utils.pick(["üòç", "ü§©", "üò±", "üéâ", "üí∞", "ü§ë"]);
    const chanceText = `(–®–∞–Ω—Å: ${rarityData.chance}%)`;

    return message.send(
      `üé° *${rarityData.emoji} [${rarityData.name}] ${chanceText}*\n` +
      `–í—ã–ø–∞–ª–æ: ${rewardText} ${randEmoji}\n` +
      `‚ñ∏ –û—Å—Ç–∞–ª–æ—Å—å –±–∏–ª–µ—Ç–æ–≤: ${utils.sp(message.user.bilet)}üé´`,
      { 
        attachment: getPrizeAttachment(prize),
        keyboard
      }
    );
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function createKeyboard() {
  return JSON.stringify({
    inline: true,
    buttons: [[{
      action: {
        type: "text",
        payload: JSON.stringify({ command: `—Ñ–æ—Ä—Ç—É–Ω–∞ –µ–±–∞—Ç—å` }),
        label: "üé° –ö—Ä—É—Ç–∏—Ç—å —Å–Ω–æ–≤–∞ [10üé´]",
      },
      color: "positive",
    }]]
  });
}

function getPrizeAttachment(prize) {
  const attachments = {
    1: 'photo-211261524_457239022',
    2: 'photo-211261524_457239023',
    3: 'photo-211261524_457239027',
    4: 'photo-211261524_457239022',
    5: 'photo-211261524_457239022',
    6: 'photo-211261524_457239026',
    7: 'photo-211261524_457239022',
    8: 'photo-211261524_457239022'
  };
  return attachments[prize] || 'photo-211261524_457239021';
}

function activateVip(user) {
  user.settings.vip = true;
  user.stock.status = "VIP";
  user.limit.nicklimit = 21;
  user.level += 5;
  user.limit.banklimit = 100000000000000;
  user.limit.farmlimit = 3000;
  user.limit.videocardlimit = 50;
  user.limit.playerlimit = 100000000000000;
  user.limit.sent = 0;
  user.maxenergy = 20;
}





module.exports = commands;
