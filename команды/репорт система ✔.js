let utils = require('../utils.js')

const commands = [];

let botinfo = require("../database/botinfo.json");

const fs = require('fs');

let double = require('../database/users.json')

let chats = require('../database/chats.json')

const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi,
    reports: reports
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ 
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js'); 

const tokensFilePath2 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–∏–¥ –±–µ—Å–µ–¥.json';

function getToken2() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath2, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData2 = getToken2(); 

const reports = tokenData2.reports

cmd.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç)\s(.+)$/i, async (message, bot) => {
  if (message.user.rep == true) return bot(`–î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–ø–æ—Ä—Ç.`);

  try {
      if (!message.user.timers.timereport) message.user.timers.timereport = 0;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞
      if (message.user.bans.rban) return message.send(`‚ùå @id${message.user.id} (${message.user.tag}), –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç, –ø–æ—Ç–æ–º—É-—á—Ç–æ –í—ã –∏–º–µ–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –†–ï–ü–û–†–¢–ê.`);

      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
      message.user.timers.timereport = Date.now() + 120000; // 2 –º–∏–Ω—É—Ç—ã

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ø–æ—Ä—Ç–µ
      botinfo.reports += 1;
      message.user.rep = true;
      message.user.vopros = message.args[1];

      let smileng = utils.pick([`üå∑`, `üå∏`, `üåπ`, `üå∫`, `üåº`, `üíê`, `‚ù§Ô∏è`, `üíì`, `üíï`]);

      // === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π ===
      let attachments = [];
      
      if (message.attachments.length > 0) {
          for (const attachment of message.attachments) {
              let attachmentString = '';
              switch (attachment.type) {
                  case 'video':
                      attachmentString = `video${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  case 'photo':
                      attachmentString = `photo${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  case 'audio':
                      attachmentString = `audio${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  case 'doc':
                      attachmentString = `doc${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  case 'wall':
                      attachmentString = `wall${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  case 'audio_message':
                      attachmentString = `audio_message${attachment.ownerId}_${attachment.id}`;
                      if (attachment.accessKey) attachmentString += `_${attachment.accessKey}`;
                      break;
                  default:
                      console.log(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –≤–ª–æ–∂–µ–Ω–∏—è: ${attachment.type}`);
                      continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–∏–ø—ã
              }
              attachments.push(attachmentString);
          }
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –≤–ª–æ–∂–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
      if (attachments.length === 0) {
          attachments.push("video-168874636_456244881");
      }

      // === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞ ===
      const keyboard = {
          inline: true,
          buttons: [
              [
                  {
                      action: {
                          type: "text",
                          "payload": { command: `–æ—Ç–≤–µ—Ç ${message.user.uid} –ø–∏—à–∏—Ç–µ –ø–æ —Ç–µ–º–µ –≤ —Ä–µ–ø–æ—Ä—Ç –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É.` },
                          label: "‚ö†Ô∏è –§–ª—É–¥ ‚ö†Ô∏è",
                      },
                      color: "default",
                  },
                  {
                      action: {
                          type: "text",
                          "payload": { command: `–≥–µ—Ç ${message.user.uid}` },
                          label: "üëÅ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ üëÅ",
                      },
                      color: "default",
                  },
              ],
          ],
      };

      const sendParams = {
          chat_id: reports,
          forward_messages: message.id,
          message: `‚úèÔ∏è –ù–û–í–´–ô –†–ï–ü–û–†–¢! ‚òÉÔ∏è üÜï

‚ñ∂Ô∏è –û—Ç–ø—Ä–∞–≤–∏–ª –∏–≥—Ä–æ–∫ ‚Ä∫ @id${message.user.id} (${message.user.tag})[ID: ${message.user.uid}]
üí¨ –¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã ‚Ä∫ ¬´${message.args[1]}¬ª

üî© –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Ä∫ ¬´–û—Ç–≤–µ—Ç [ID –∏–≥—Ä–æ–∫–∞] [—Ç–µ–∫—Å—Ç]¬ª

@all üéÖ`,
          random_id: getRandomId(),
          keyboard: JSON.stringify(keyboard)
      };

      // –î–æ–±–∞–≤–ª—è–µ–º attachments —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (attachments.length > 0) {
          sendParams.attachment = attachments.join(',');
      }

      vk.api.messages.send(sendParams);

      // –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      return message.send(`‚úÖ @id${message.user.id} (${message.user.tag}), —É—Å–ø–µ—à–Ω–æ! –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –æ–∂–∏–¥–∞–π—Ç–µ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ üí¨`);
  } catch (error) {
      console.error(error);
      return message.send(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ—Ä—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`);
  }
});

const getRandomId = () => (Math.floor(Math.random() * 10000) * Date.now());



cmd.hear(/^(?:–æ—Ü–µ–Ω–∏—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
  if (!message.isChat) {
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ uid
    let user = double.find(x => x.uid === Number(message.args[1]));
    if (!user) {
      console.log('–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      return bot(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }

    if (user.ochenka) {
      return bot(`‚ùå –í—ã —É–∂–µ –æ—Ü–µ–Ω–∏–≤–∞–ª–∏ —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –û—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.`);
    }

    let ratingMessage;
    let smileng = utils.pick([`üå∑`, `üå∏`, `üåπ`, `üå∫`, `üåº`, `üíê`, `‚ù§Ô∏è`, `üíì`, `üíï`]);
    let attachment;

    // –û—Ü–µ–Ω–∫–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è
    if (message.args[2].toLowerCase() === "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ") {
      user.astats.norm += 1;
      user.ochenka = true;
      message.user.admid = false;

      ratingMessage = `‚ñ∂Ô∏è –ò–≥—Ä–æ–∫ @id${message.user.id} (${message.user.tag}) –æ—Ü–µ–Ω–∏–ª –í–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ! üëç${smileng}\n` +
        `„ÄΩÔ∏è –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(user.astats.norm)} üëç | ${utils.sp(user.astats.bad)} üëé`;
      attachment = `photo-203302510_457239155`;
    }
    // –û—Ü–µ–Ω–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
    else if (message.args[2].toLowerCase() === "–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ") {
      user.astats.bad += 1;
      user.ochenka = true;
      message.user.admid = false;

      ratingMessage = `‚ñ∂Ô∏è –ò–≥—Ä–æ–∫ @id${message.user.id} (${message.user.tag}) –æ—Ü–µ–Ω–∏–ª –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ üëé${smileng}\n` +
        `„ÄΩÔ∏è –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(user.astats.norm)} üëç | ${utils.sp(user.astats.bad)} üëé`;
      attachment = `photo-203302510_457239156`;
    } else {
      console.log('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞.');
      return bot(`‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É: ¬´–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ¬ª –∏–ª–∏ ¬´–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ¬ª.`);
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try {
      await vk.api.messages.send({
        user_id: user.id,
        random_id: 0,
        message: ratingMessage,
        attachment: attachment
      });
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`);
      return bot(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –≤–∞—à–µ–π –æ—Ü–µ–Ω–∫–µ.`);
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º attachment –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const userAttachment = message.args[2].toLowerCase() === "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ" 
      ? `photo-203302510_457239155` 
      : `photo-203302510_457239156`;

    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ü–µ–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ ¬´${message.args[2]}¬ª (${message.args[2].toLowerCase() === "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ" ? "üëç" : "üëé"}).\n` +
      `üòÆ –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ—Ü–µ–Ω–∫—É, —ç—Ç–æ –Ω–∞–º –ø–æ–º–æ–≥–∞–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±—É–¥–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–≤–µ–¥–æ–º–ª—ë–Ω –æ –í–∞—à–µ–π –æ—Ü–µ–Ω–∫–µ.`, 
      { attachment: userAttachment });
  }
});




module.exports = commands;