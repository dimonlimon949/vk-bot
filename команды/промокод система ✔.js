let utils = require('../utils.js')

const commands = [];

const fs = require('fs');

let double = require('../database/users.json')
let config = require('../database/settings.json');
let promo = 0

async function savePromo() {
  require("fs").writeFileSync(
    "./database/settings.json",
    JSON.stringify(config, null, "\t")
  );

  return true;
}


const cmd = {
  hear: (pattern, action) => {
    commands.push([pattern, action]);
  }
};

const tokensFilePath = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/—Ç–æ–∫–µ–Ω—ã.json';

function getToken() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath, 'utf8'));
    return tokens; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
function saveTokens(token, spoler, chatlogi) {
  const tokens = {
    token: token,
    spoler: spoler,
    chatlogi: chatlogi
  };

  try {
    fs.writeFileSync(tokensFilePath, JSON.stringify(tokens, null, 2), 'utf8');
    console.log('–¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const tokenData = getToken();

const chatlogi = tokenData.chatlogi; // —á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤
const spoler = tokenData.spoler;
const { VK } = require('vk-io');
const vk = require('../vk-api.js');

const tokensFilePath3 = './–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–≤–∞–ª—é—Ç—ã.json';

function getToken3() {
  try {
    const tokens = JSON.parse(fs.readFileSync(tokensFilePath3, 'utf8'));
    return tokens;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:', error);
    return null;
  }
}

const tokenData3 = getToken3();

let val1 = tokenData3.val1
let val2 = tokenData3.val2
let val3 = tokenData3.val3
let val4 = tokenData3.val4
let val5 = tokenData3.val5

let tokensCache = null;

setInterval(() => {
  tokensCache = getToken3();
  if (tokensCache) {
    val1 = tokensCache.val1;
    val2 = tokensCache.val2;
    val3 = tokensCache.val3;
    val4 = tokensCache.val4;
  }
}, 1000);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
function generateRandomPromoCode(length) {
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  let promoCode = '';
  for (let i = 0; i < length; i++) {
    promoCode += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return promoCode;
}

cmd.hear(/^–ø—Ä–æ–º–æ\s([^]+)$/i, async (message, bot) => {

  if (message.args[1] === "–≤—ã–∫–ª") {


    config.promotip = "balance";

    config.promovalue = 0;

    config.promolimit = 0;

    await savePromo();

    clearPromo();

    return bot("–ü—Ä–æ–º–æ–∫–æ–¥ –æ–±–Ω—É–ª—ë–Ω! üî±");
  }

  if (config.promoname === message.args[1]) {

    if (message.user.promo) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥. ‚õî`);
    
    else {
      if (promo >= config.promolimit)
        return bot(
          `—É —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!\n–í–∫–ª—é—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å—è—Ö –≤ –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞–≤–∞—Ç—å –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö! üì¢`
        );

      if (config.promotip === "btc")
        message.user.btc += config.promovalue;

      if (config.promotip === "–±–∞–ª–∞–Ω—Å")
        message.user.balance += config.promovalue;

      if (config.promotip === "–¥–æ–Ω–∞—Ç-–∫–µ–π—Å—ã")
        message.user.c3 += config.promovalue;

      if (config.promotip === "–≥–±")
        message.user.balance2 += config.promovalue;

      if (config.promotip === "GB")
        message.user.balance2 += config.promovalue;

      if (config.promotip === "lega")
        message.user.c16 += config.promovalue;

      if (config.promotip === "—Ä–µ–π—Ç–∏–Ω–≥")
        message.user.rating += config.promovalue;

      if (config.promotip === "—Å–∫–æ–∏–Ω—ã")
        message.user.sprcoin += config.promovalue;

      if (config.promotip === "vip") {
        const user = message.user;

        if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

        if (user.settings.premium !== false)
          return bot("–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å [Premium]. ‚ö†");

        if (user.settings.vip !== false)
          return bot("–∏–≥—Ä–æ–∫ —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å [VIP]. ‚ö†");

        user.settings.vip = true;

        user.stock.status = "VIP";

        user.limit.nicklimit = 21;

        user.level += 5;

        user.limit.banklimit = 100000000;

        user.limit.farmlimit = 200;

        user.limit.videocardlimit = 50;

        user.limit.playerlimit = 100000000;

        user.limit.sent = 0;

        user.maxenergy = 20;

        if (user.notifications)
          await vk.api.messages.send({
            user_id: user.id,
            message: `[‚ùó–£–í–ï–î–û–ú–õ–ï–ù–ò–ï‚ùó]

      ${user.tag} –≤—ã –ø–æ–ª—É—á–∏–ª–∏ VIP —Å—Ç–∞—Ç—É—Å! üíé

      ‚ö† –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –∫–æ–º–∞–¥–Ω–∞–º–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´VIP help¬ª

      üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`,
            random_id: 0,
          });
      }

      if (config.promotip === "premium") {
        const user = message.user;

        if (!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

        if (user.settings.premium !== false)
          return bot("–∏–≥—Ä–æ–∫ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è [Premium]. ‚ö†");

        user.settings.vip = false;

        user.settings.premium = true;

        user.stock.status = "Premium";

        user.limit.nicklimit = 32;

        user.level += 35;

        user.opit += 5000;

        user.limit.banklimit = 200000000;

        user.limit.farmlimit = 300;

        user.limit.videocardlimit = 75;

        user.limit.playerlimit = 200000000;

        user.limit.sent = 0;

        user.maxenergy = 30;

        await bot(`–∏–≥—Ä–æ–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω [Premium] üíé`);

        if (user.notifications)
          await vk.api.messages.send({
            user_id: user.id,
            message: `[‚ùó–£–í–ï–î–û–ú–õ–ï–ù–ò–ï‚ùó]
${user.tag} –≤—ã –ø–æ–ª—É—á–∏–ª–∏ Premium —Å—Ç–∞—Ç—É—Å! üíé
‚ö† –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –∫–æ–º–∞–¥–Ω–∞–º–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´Premium help¬ª
üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`,
            random_id: 0,
          });
      }



      if (config.promotip === "hellcase") {
        message.user.c5 += config.promovalue;
      }
    }

    message.user.promo = true;

    promo += 1;

    ostalos = config.promolimit - promo;

    await savePromo();

    return bot(`–∑–∞—á–∏—Å–ª–µ–Ω–æ +${utils.sp(config.promovalue)} ${config.promotip
      .toString()
      .replace(/btc/gi, " ‡∏ø")
      .replace(/balance/gi, ` ${val1}`)
      .replace(/lega/gi, " –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∞—Ä–¥—Ä–æ–ø")
      .replace(/vip/gi, " VIP —Å—Ç–∞—Ç—É—Å")
      .replace(/premium/gi, " PREMIUM —Å—Ç–∞—Ç—É—Å")
      .replace(/hellcase/gi, " hellowin –∫–µ–π—Å–æ–≤")
      .replace(/dkeys/gi, " –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤")} ‚úÖ

  üì¢ –û—Å—Ç–∞–ª–æ—Å—å ${ostalos} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π.`);
  } else {
    return bot(
      `—É –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ª–∏–±–æ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –µ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—è`
    );
  }


});

cmd.hear(/^(?:setpromo|sp)\s([^]+)\s([^]+)\s([0-9]+)\s([0-9]+)$/i, async (message, bot) => {
  promo = 0;
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º promo —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  double.forEach(user => {
    user.promo = false;
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ users.json (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ double - —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
  fs.writeFileSync("./database/users.json", JSON.stringify(double, null, "\t"));

  config.promoname = message.args[1];
  config.promotip = message.args[2];
  config.promovalue = Number(message.args[3]);
  config.promolimit = Number(message.args[4]);

  await savePromo();

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id; // –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞ API

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId, // ID –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
      message: `üéâ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥! üéâ\n\n–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥: ${config.promoname}\n\nüí£ –ù–∞–∑–≤–∞–Ω–∏–µ: ${config.promoname}\nüí£ –¢–∏–ø: ${config.promotip}\nüí¢ –°—É–º–º–∞: ${utils.sp(config.promovalue)} ${config.promotip
        .toString()
        .replace(/btc/gi, " ‡∏ø")
        .replace(/balance/gi, `${val1}`)
        .replace(/lega/gi, " –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∞—Ä–¥—Ä–æ–ø")
        .replace(/vip/gi, " VIP —Å—Ç–∞—Ç—É—Å")
        .replace(/premium/gi, " PREMIUM —Å—Ç–∞—Ç—É—Å")
        .replace(/hellcase/gi, " hellowin –∫–µ–π—Å–æ–≤")
        .replace(/dkeys/gi, " –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤")}\nüë• –ö–æ–ª-–≤–æ: ${utils.sp(config.promolimit)}`,
      access_token: tokenData.token,
      attachments: [],
    });

    const postId = postResponse.post_id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å—Ç–∞

    return bot(`–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. ‚öô

    üí£ –ù–∞–∑–≤–∞–Ω–∏–µ: ${message.args[1]}.	

    üí£ –¢–∏–ø: ${message.args[2]}.

    üí¢ –°—É–º–º–∞: ${utils.sp(message.args[3])}.

    üë• –ö–æ–ª-–≤–æ: ${message.args[4]}.`, {
      keyboard: JSON.stringify({
        "inline": true,
        "buttons": [
          [{
            "action": {
              "type": "text",
              payload: JSON.stringify({ command: `–ø—Ä–æ–º–æ ${config.promoname}` }),
              "label": "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"
            },
            "color": "positive"
          }]
        ]
      })
    });

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º:", error);
    return bot(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º: ${error.message}`); // –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ –≤ —á–∞—Ç–µ
  }

});

cmd.hear(/^(?:—á–µ–∫ –ø—Ä–æ–º–æ)$/i, async (message, bot) => {


  return bot(`–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ.

üí£ –ù–∞–∑–≤–∞–Ω–∏–µ: ${config.promoname}.
üí£ –¢–∏–ø: ${config.promotip}.
üí¢ –°—É–º–º–∞: ${config.promovalue}.
üë• –ö–æ–ª-–≤–æ: ${config.promolimit}.
üë• –û—Å—Ç–∞–ª–æ—Å—å: ${config.promolimit - promo}.`, {
    keyboard: JSON.stringify({
      "inline": true,
      "buttons": [
        [{
          "action": {
            "type": "text",
            payload: JSON.stringify({ command: `randomPromocode` }),
            "label": `üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥`
          },
          "color": "primary"
        },],
        [
        {
          "action": {
            "type": "text",
            payload: JSON.stringify({ command: `–ø—Ä–æ–º–æ ${config.promoname}` }), // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            "label": "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"
          },
          "color": "positive"
        }
        ]
      ]
    })
  });
});

const availablePromoTypes = ["btc", "–±–∞–ª–∞–Ω—Å", "–¥–æ–Ω–∞—Ç-–∫–µ–π—Å—ã", "—Ä–µ–π—Ç–∏–Ω–≥", "GB"];

cmd.hear(/^(?:randomPromocode)\s?(btc|–±–∞–ª–∞–Ω—Å|–¥–æ–Ω–∞—Ç-–∫–µ–π—Å—ã|—Ä–µ–π—Ç–∏–Ω–≥|GB)?$/i, async (message, bot) => {
  promo = 0;

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º promo —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  double.forEach(user => {
    user.promo = false;
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ users.json (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ double - —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
  fs.writeFileSync("./database/users.json", JSON.stringify(double, null, "\t"));

  const promoLength = utils.random(3, 5);
  const newPromoCode = generateRandomPromoCode(promoLength);

  // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω, –∏–ª–∏ –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π
  let promoType = message.args[1];
  if (!promoType) {
    promoType = availablePromoTypes[Math.floor(Math.random() * availablePromoTypes.length)];
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–π
  if (!availablePromoTypes.includes(promoType)) {
    return bot(`–£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: ${availablePromoTypes.join(", ")}`);
  }

  let promoValue;
  switch (promoType) {
    case " btc":
      promoValue = utils.random(100, 500);
      break;
    case " –±–∞–ª–∞–Ω—Å":
      promoValue = utils.random(5000000, 50000000);
      break;
    case " –¥–æ–Ω–∞—Ç-–∫–µ–π—Å—ã":
      promoValue = utils.random(1, 5);
      break;
    case " —Ä–µ–π—Ç–∏–Ω–≥":
      promoValue = utils.random(20, 150);
      break;
    case " GB":
      promoValue = utils.random(1000, 15000);
      break;
    default:
      promoValue = 1; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
  config.promoname = newPromoCode;
  config.promotip = promoType;
  config.promovalue = promoValue;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º promolimit –≤ —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 3 –¥–æ 10
  config.promolimit = utils.random(3, 10);

  await savePromo(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

  try {
    const groupInfo = await vk.api.call('groups.getById', {
      access_token: tokenData.token,
      v: '5.131',
      group_id: config.groupId // –ò—Å–ø–æ–ª—å–∑—É–µ–º config.groupId –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    });

    if (!groupInfo || groupInfo.length === 0) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.');
    }

    const groupId = groupInfo[0].id; // –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞ API

    const postResponse = await vk.api.wall.post({
      owner_id: -groupId, // ID –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
      message: `üéâ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥! üéâ\n\n–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥: ${newPromoCode}\n\nüí£ –ù–∞–∑–≤–∞–Ω–∏–µ: ${config.promoname}\nüí£ –¢–∏–ø: ${config.promotip}\nüí¢ –°—É–º–º–∞: ${utils.sp(config.promovalue)} ${config.promotip
        .toString()
        .replace(/btc/gi, " ‡∏ø")
        .replace(/balance/gi, ` ${val1}`)
        .replace(/lega/gi, " –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∞—Ä–¥—Ä–æ–ø")
        .replace(/vip/gi, " VIP —Å—Ç–∞—Ç—É—Å")
        .replace(/premium/gi, " PREMIUM —Å—Ç–∞—Ç—É—Å")
        .replace(/hellcase/gi, " hellowin –∫–µ–π—Å–æ–≤")
        .replace(/dkeys/gi, " –¥–æ–Ω–∞—Ç-–∫–µ–π—Å–æ–≤")}\nüë• –ö–æ–ª-–≤–æ: ${utils.sp(config.promolimit)}\nüë• –û—Å—Ç–∞–ª–æ—Å—å: ${config.promolimit - promo}`,
      access_token: tokenData.token,
      attachments: [],
    });

    const postId = postResponse.post_id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å—Ç–∞

    await vk.api.messages.send({
      peer_id: message.peerId,
      message: `–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥: ${newPromoCode}`,
      attachment: `wall-${groupId}_${postId}`,
      random_id: 0,
      keyboard: JSON.stringify({
        "inline": true,
        "buttons": [
          [{
            "action": {
              "type": "text",
              payload: JSON.stringify({ command: `–ø—Ä–æ–º–æ ${newPromoCode}` }),
              "label": `‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥`
            },
            "color": "positive"
          }]
        ]
      })
    });
    return console.log(`‚úÖ –ü–æ—Å—Ç —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –Ω–∞ —Å—Ç–µ–Ω–µ –≥—Ä—É–ø–ø—ã. ID –ø–æ—Å—Ç–∞: ${postId}`);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º:", error);
    return bot(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º: ${error.message}`); // –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ –≤ —á–∞—Ç–µ
  }
});


module.exports = commands;