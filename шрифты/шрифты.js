// —à—Ä–∏—Ñ—Ç—ã/—à—Ä–∏—Ñ—Ç—ã.js

const programmerUnicodeStyles = [
  {
    name: "–†—É–Ω–∏—á–µ—Å–∫–∏–π (—Å —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–µ–π)",
    apply: (text) => {
      const transliterationMap = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e', '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'j', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'h', '—Ü': 'c', '—á': 'ch', '—à': 'sh', '—â': 'sch', '—ä': '',
        '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'E', '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'J', '–ö': 'K', '–õ': 'L', '–ú': 'M',
        '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U', '–§': 'F', '–•': 'H', '–¶': 'C', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch', '–™': '',
        '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya'
      };

      const runicMap = {
        'a': '·ö®', 'b': '·õí', 'c': '·ö≤', 'd': '·õû', 'e': '·õñ', 'f': '·ö†', 'g': '·ö∑', 'h': '·ö∫', 'i': '·õÅ', 'j': '·õÉ', 'k': '·ö¥', 'l': '·õö', 'm': '·õó',
        'n': '·öæ', 'o': '·õü', 'p': '·õà', 'q': '·öµ', 'r': '·ö±', 's': '·õã', 't': '·õè', 'u': '·ö¢', 'v': '·ö°', 'w': '·öπ', 'x': '·õâ', 'y': '·ö£', 'z': '·õâ'
      };

      let result = "";
      for (let i = 0; i < text.length; i++) {
        const char = text[i];
        const transliteratedChar = transliterationMap[char] || char; // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        const runicChar = runicMap[transliteratedChar] || char; // –†—É–Ω–∏—á–µ—Å–∫–∏–π, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ—Ä–∏–≥–∏–Ω–∞–ª

        result += runicChar;
      }
      return result;
    },
  },
  {
    name: "–ì–æ—Ç—Å–∫–∏–π (—Å —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–µ–π)",
    apply: (text) => {
      const transliterationMap = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e', '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'j', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'h', '—Ü': 'c', '—á': 'ch', '—à': 'sh', '—â': 'sch', '—ä': '',
        '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'E', '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'J', '–ö': 'K', '–õ': 'L', '–ú': 'M',
        '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U', '–§': 'F', '–•': 'H', '–¶': 'C', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch', '–™': '',
        '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya'
      };

      const gothicMap = {
        'a': 'êå∞', 'b': 'êå±', 'c': 'êå∫', 'd': 'êå≥', 'e': 'êå¥', 'f': 'êçÖ', 'g': 'êå≤', 'h': 'êå∑', 'i': 'êåπ', 'j': 'êåæ', 'k': 'êå∫', 'l': 'êåª', 'm': 'êåº',
        'n': 'êåΩ', 'o': 'êçâ', 'p': 'êçÄ', 'q': 'q', 'r': 'êçÇ', 's': 'êçÉ', 't': 'êçÑ', 'u': 'êåø', 'v': 'v', 'w': 'êçÖ', 'x': 'x', 'y': 'y', 'z': 'z'
      };

      let result = "";
      for (let i = 0; i < text.length; i++) {
        const char = text[i];
        const transliteratedChar = transliterationMap[char] || char; // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        const gothicChar = gothicMap[transliteratedChar] || char; // –ì–æ—Ç—Å–∫–∏–π, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ—Ä–∏–≥–∏–Ω–∞–ª

        result += gothicChar;
      }
      return result;
    },
  },
    {
        name: "–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Å—Ç–∏–ª—å",
        apply: (text) => {
            let result = "";
            const map = {
                'a': 'aÃ≤', 'b': 'bÃ≤', 'c': 'cÃ≤', 'd': 'dÃ≤', 'e': 'eÃ≤', 'f': 'fÃ≤', 'g': 'gÃ≤', 'h': 'hÃ≤', 'i': 'iÃ≤', 'j': 'jÃ≤', 'k': 'kÃ≤', 'l': 'lÃ≤', 'm': 'mÃ≤',
                'n': 'nÃ≤', 'o': 'oÃ≤', 'p': 'pÃ≤', 'q': 'qÃ≤', 'r': 'rÃ≤', 's': 'sÃ≤', 't': 'tÃ≤', 'u': 'uÃ≤', 'v': 'vÃ≤', 'w': 'wÃ≤', 'x': 'xÃ≤', 'y': 'yÃ≤', 'z': 'zÃ≤',
                'A': 'AÃ≤', 'B': 'BÃ≤', 'C': 'CÃ≤', 'D': 'DÃ≤', 'E': 'EÃ≤', 'F': 'FÃ≤', 'G': 'GÃ≤', 'H': 'HÃ≤', 'I': 'IÃ≤', 'J': 'JÃ≤', 'K': 'KÃ≤', 'L': 'LÃ≤', 'M': 'MÃ≤',
                'N': 'NÃ≤', 'O': 'OÃ≤', 'P': 'PÃ≤', 'Q': 'QÃ≤', 'R': 'RÃ≤', 'S': 'SÃ≤', 'T': 'TÃ≤', 'U': 'UÃ≤', 'V': 'VÃ≤', 'W': 'WÃ≤', 'X': 'XÃ≤', 'Y': 'YÃ≤', 'Z': 'ZÃ≤',
                '–∞': '–∞Ã≤', '–±': '–±Ã≤', '–≤': '–≤Ã≤', '–≥': '–≥Ã≤', '–¥': '–¥Ã≤', '–µ': '–µÃ≤', '—ë': '—ëÃ≤', '–∂': '–∂Ã≤', '–∑': '–∑Ã≤', '–∏': '–∏Ã≤', '–π': '–πÃ≤', '–∫': '–∫Ã≤', '–ª': '–ªÃ≤', '–º': '–ºÃ≤',
                '–Ω': '–ΩÃ≤', '–æ': '–æÃ≤', '–ø': '–øÃ≤', '—Ä': '—ÄÃ≤', '—Å': '—ÅÃ≤', '—Ç': '—ÇÃ≤', '—É': '—ÉÃ≤', '—Ñ': '—ÑÃ≤', '—Ö': '—ÖÃ≤', '—Ü': '—ÜÃ≤', '—á': '—áÃ≤', '—à': '—àÃ≤', '—â': '—âÃ≤', '—ä': '—äÃ≤',
                '—ã': '—ãÃ≤', '—å': '—åÃ≤', '—ç': '—çÃ≤', '—é': '—éÃ≤', '—è': '—èÃ≤',
                '–ê': '–êÃ≤', '–ë': '–ëÃ≤', '–í': '–íÃ≤', '–ì': '–ìÃ≤', '–î': '–îÃ≤', '–ï': '–ïÃ≤', '–Å': '–ÅÃ≤', '–ñ': '–ñÃ≤', '–ó': '–óÃ≤', '–ò': '–òÃ≤', '–ô': '–ôÃ≤', '–ö': '–öÃ≤', '–õ': '–õÃ≤', '–ú': '–úÃ≤',
                '–ù': '–ùÃ≤', '–û': '–ûÃ≤', '–ü': '–üÃ≤', '–†': '–†Ã≤', '–°': '–°Ã≤', '–¢': '–¢Ã≤', '–£': '–£Ã≤', '–§': '–§Ã≤', '–•': '–•Ã≤', '–¶': '–¶Ã≤', '–ß': '–ßÃ≤', '–®': '–®Ã≤', '–©': '–©Ã≤', '–™': '–™Ã≤',
                '–´': '–´Ã≤', '–¨': '–¨Ã≤', '–≠': '–≠Ã≤', '–Æ': '–ÆÃ≤', '–Ø': '–ØÃ≤'
            };
            for (let i = 0; i < text.length; i++) {
                const char = text[i];
                result += map[char] || char; // Fallback to original character if no mapping exists
            }
            return result;
        }
    },
    {
        name: "–ó–µ—Ä–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
        apply: (text) => {
            let result = "";
            const map = {
                'a': '…ê', 'b': 'q', 'c': '…î', 'd': 'p', 'e': '«ù', 'f': '…ü', 'g': '∆É', 'h': '…•', 'i': 'ƒ±', 'j': '…æ', 'k': ' û', 'l': 'l', 'm': '…Ø',
                'n': 'u', 'o': 'o', 'p': 'd', 'q': 'b', 'r': '…π', 's': 's', 't': ' á', 'u': 'n', 'v': ' å', 'w': ' ç', 'x': 'x', 'y': ' é', 'z': 'z',
                'A': '‚àÄ', 'B': 'êêí', 'C': '∆Ü', 'D': '·ó°', 'E': '∆é', 'F': 'ÍüÑ', 'G': '◊§', 'H': 'H', 'I': 'I', 'J': '≈ø', 'K': ' û', 'L': 'À•', 'M': 'W',
                'N': 'N', 'O': 'O', 'P': '‘Ä', 'Q': 'Œå', 'R': 'Íì§', 'S': 'S', 'T': '‚ä•', 'U': '‚à©', 'V': 'Œõ', 'W': 'M', 'X': 'X', 'Y': 'Y', 'Z': 'Z',
                '–∞': '…ê', '–±': 'q', '–≤': ' ö', '–≥': '…π', '–¥': 'p', '–µ': '«ù', '—ë': '”≠', '–∂': '∆ç', '–∑': 'Œµ', '–∏': '–∏', '–π': 'ƒ±Ã£', '–∫': ' û', '–ª': 'v', '–º': '…Ø',
                '–Ω': 'u', '–æ': '–æ', '–ø': 'd', '—Ä': ' Å', '—Å': '…î', '—Ç': '…Ø', '—É': ' é', '—Ñ': '»∏', '—Ö': '—Ö', '—Ü': '«π', '—á': 'h', '—à': 'm', '—â': 'm', '—ä': 'q',
                '—ã': 'ƒ±', '—å': 'q', '—ç': '—î', '—é': 'oƒ±', '—è': ' Å',
                '–ê': '‚àÄ', '–ë': 'q', '–í': '·ó∫', '–ì': '·ô†', '–î': '·ó°', '–ï': '∆é', '–Å': '∆é', '–ñ': '∆∏', '–ó': '∆ê', '–ò': '–ò', '–ô': '–ò', '–ö': ' û', '–õ': 'v', '–ú': 'W',
                '–ù': 'N', '–û': 'O', '–ü': '‘Ä', '–†': 'Íì§', '–°': '∆Ü', '–¢': '‚ä•', '–£': ' é', '–§': '»∏', '–•': 'X', '–¶': '«π', '–ß': 'H', '–®': 'M', '–©': 'M', '–™': 'q',
                '–´': 'ƒ±', '–¨': 'q', '–≠': '–Ñ', '–Æ': 'OI', '–Ø': ' Å'
            };

            for (let i = 0; i < text.length; i++) {
                const char = text[i];
                result += map[char] || char; // Fallback to original character if no mapping exists
            }
            return result;
        }
    },
  {
        name: "–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã",
        apply: (text) => {
            let result = "";
            const map = {
                'a': 'ÂçÇ', 'b': '‰πÉ', 'c': 'Âåö', 'd': 'ÂàÄ', 'e': '‰πá', 'f': '‰∏ã', 'g': '„É†', 'h': 'ÂçÑ', 'i': 'Â∑•', 'j': '‰∏Å', 'k': 'Èïø', 'l': '„Ñ•', 'm': '‰ªé',
                'n': '†ò®', 'o': 'Âè£', 'p': 'Â∞∏', 'q': '„îø', 'r': 'Â∞∫', 's': '‰∏Ç', 't': '‰∏Ö', 'u': 'Âáµ', 'v': '„É™', 'w': 'Â±±', 'x': '‰πÇ', 'y': '‰∏´', 'z': '‰πô',
                'A': 'ÂçÇ', 'B': '‰πÉ', 'C': 'Âåö', 'D': 'ÂàÄ', 'E': '‰πá', 'F': '‰∏ã', 'G': '„É†', 'H': 'ÂçÑ', 'I': 'Â∑•', 'J': '‰∏Å', 'K': 'Èïø', 'L': '„Ñ•', 'M': '‰ªé',
                'N': '†ò®', 'O': 'Âè£', 'P': 'Â∞∏', 'Q': '„îø', 'R': 'Â∞∫', 'S': '‰∏Ç', 'T': '‰∏Ö', 'U': 'Âáµ', 'V': '„É™', 'W': 'Â±±', 'X': '‰πÇ', 'Y': '‰∏´', 'Z': '‰πô',
                '–∞': '–∞', '–±': '–±', '–≤': '–≤', '–≥': '–≥', '–¥': '–¥', '–µ': '–µ', '—ë': '—ë', '–∂': '–∂', '–∑': '–∑', '–∏': '–∏', '–π': '–π', '–∫': '–∫', '–ª': '–ª', '–º': '–º',
                '–Ω': '–Ω', '–æ': '–æ', '–ø': '–ø', '—Ä': '—Ä', '—Å': '—Å', '—Ç': '—Ç', '—É': '—É', '—Ñ': '—Ñ', '—Ö': '—Ö', '—Ü': '—Ü', '—á': '—á', '—à': '—à', '—â': '—â', '—ä': '—ä',
                '—ã': '—ã', '—å': '—å', '—ç': '—ç', '—é': '—é', '—è': '—è',
                '–ê': '–ê', '–ë': '–ë', '–í': '–í', '–ì': '–ì', '–î': '–î', '–ï': '–ï', '–Å': '–Å', '–ñ': '–ñ', '–ó': '–ó', '–ò': '–ò', '–ô': '–ô', '–ö': '–ö', '–õ': '–õ', '–ú': '–ú',
                '–ù': '–ù', '–û': '–û', '–ü': '–ü', '–†': '–†', '–°': '–°', '–¢': '–¢', '–£': '–£', '–§': '–§', '–•': '–•', '–¶': '–¶', '–ß': '–ß', '–®': '–®', '–©': '–©', '–™': '–™',
                '–´': '–´', '–¨': '–¨', '–≠': '–≠', '–Æ': '–Æ', '–Ø': '–Ø'
            };

            for (let i = 0; i < text.length; i++) {
                const char = text[i];
                result += map[char] || char; // Fallback to original character if no mapping exists
            }
            return result;
        }
    },
    {
        name: "–ö—Ä—É—Ç–æ–π —Ç–µ–∫—Å—Ç",
        apply: (text) => {
            let result = "";
            const map = {
                'a': 'ÂçÇ', 'b': '‰πÉ', 'c': 'Âåö', 'd': 'ÂàÄ', 'e': '‰πá', 'f': '‰∏ã', 'g': '„É†', 'h': 'ÂçÑ', 'i': 'Â∑•', 'j': '‰∏Å', 'k': 'Èïø', 'l': '„Ñ•', 'm': '‰ªé',
                'n': '†ò®', 'o': 'Âè£', 'p': 'Â∞∏', 'q': '„îø', 'r': 'Â∞∫', 's': '‰∏Ç', 't': '‰∏Ö', 'u': 'Âáµ', 'v': '„É™', 'w': 'Â±±', 'x': '‰πÇ', 'y': '‰∏´', 'z': '‰πô',
                'A': 'ÂçÇ', 'B': '‰πÉ', 'C': 'Âåö', 'D': 'ÂàÄ', 'E': '‰πá', 'F': '‰∏ã', 'G': '„É†', 'H': 'ÂçÑ', 'I': 'Â∑•', 'J': '‰∏Å', 'K': 'Èïø', 'L': '„Ñ•', 'M': '‰ªé',
                'N': '†ò®', 'O': 'Âè£', 'P': 'Â∞∏', 'Q': '„îø', 'R': 'Â∞∫', 'S': '‰∏Ç', 'T': '‰∏Ö', 'U': 'Âáµ', 'V': '„É™', 'W': 'Â±±', 'X': '‰πÇ', 'Y': '‰∏´', 'Z': '‰πô',
                '–∞': 'ÂçÇ', '–±': '‰πÉ', '–≤': 'Âåö', '–≥': 'ÂàÄ', '–¥': '‰πá', '–µ': '‰∏ã', '—ë': '„É†', '–∂': 'ÂçÑ', '–∑': 'Â∑•', '–∏': '‰∏Å', '–π': 'Èïø', '–∫': '„Ñ•', '–ª': '‰ªé',
                '–º': '†ò®', '–Ω': 'Âè£', '–æ': 'Â∞∏', '–ø': '„îø', '—Ä': 'Â∞∫', '—Å': '‰∏Ç', '—Ç': '‰∏Ö', '—É': 'Âáµ', '—Ñ': '„É™', '—Ö': 'Â±±', '—Ü': '‰πÇ', '—á': '‰∏´', '—à': '‰πô', '—â': '‰πô', '—ä': '‰πô',
                '—ã': '‰πô', '—å': '‰πô', '—ç': '‰πô', '—é': '‰πô', '—è': '‰πô',
                '–ê': 'ÂçÇ', '–ë': '‰πÉ', '–í': 'Âåö', '–ì': 'ÂàÄ', '–î': '‰πá', '–ï': '‰∏ã', '–Å': '„É†', '–ñ': 'ÂçÑ', '–ó': 'Â∑•', '–ò': '‰∏Å', '–ô': 'Èïø', '–ö': '„Ñ•', '–õ': '‰ªé',
                '–ú': '†ò®', '–ù': 'Âè£', '–û': 'Â∞∏', '–ü': '„îø', '–†': 'Â∞∫', '–°': '‰∏Ç', '–¢': '‰∏Ö', '–£': 'Âáµ', '–§': '„É™', '–•': 'Â±±', '–¶': '‰πÇ', '–ß': '‰∏´', '–®': '‰πô', '–©': '‰πô', '–™': '‰πô',
                '–´': '‰πô', '–¨': '‰πô', '–≠': '‰πô', '–Æ': '‰πô', '–Ø': '‰πô'
            };

            for (let i = 0; i < text.length; i++) {
                const char = text[i];
                result += map[char] || char; // Fallback to original character if no mapping exists
            }
            return result;
        }
    },
  {
        name: "–ö—Ä—É—Ç–æ–π —Ç–µ–∫—Å—Ç2",
        apply: (text) => {
            let result = "";
            const map = {
                'a': '·èó', 'b': '·è∞', 'c': '·è£', 'd': '·é¥', 'e': '·èã', 'f': '·é¶', 'g': '·é∂', 'h': '·èÇ', 'i': '·é•', 'j': '·è†', 'k': '·è¶', 'l': '·èû', 'm': '·é∑',
                'n': '·èÅ', 'o': '·éæ', 'p': '·èá', 'q': '·é§', 'r': '·èí', 's': '·èï', 't': '·éø', 'u': '·èå', 'v': '·èâ', 'w': '·èä', 'x': '·èã', 'y': '·èã', 'z': '·èã',
                'A': '·èó', 'B': '·è∞', 'C': '·è£', 'D': '·é¥', 'E': '·èã', 'F': '·é¶', 'G': '·é∂', 'H': '·èÇ', 'I': '·é•', 'J': '·è†', 'K': '·è¶', 'L': '·èû', 'M': '·é∑',
                'N': '·èÅ', 'O': '·éæ', 'P': '·èá', 'Q': '·é§', 'R': '·èí', 'S': '·èï', 'T': '·éø', 'U': '·èå', 'V': '·èâ', 'W': '·èä', 'X': '·èã', 'Y': '·èã', 'Z': '·èã',
                '–∞': '·èó', '–±': '·è∞', '–≤': '·è£', '–≥': '·é¥', '–¥': '·èã', '–µ': '·é¶', '—ë': '·é∂', '–∂': '·èÇ', '–∑': '·é•', '–∏': '·è†', '–π': '·è¶', '–∫': '·èû', '–ª': '·é∑',
                '–º': '·èÅ', '–Ω': '·éæ', '–æ': '·èá', '–ø': '·é§', '—Ä': '·èí', '—Å': '·èï', '—Ç': '·éø', '—É': '·èå', '—Ñ': '·èâ', '—Ö': '·èä', '—Ü': '·èã', '—á': '·èã', '—à': '·èã', '—â': '·èã', '—ä': '·èã',
                '—ã': '·èã', '—å': '·èã', '—ç': '·èã', '—é': '·èã', '—è': '·èã',
                '–ê': '·èó', '–ë': '·è∞', '–í': '·è£', '–ì': '·é¥', '–î': '·èã', '–ï': '·é¶', '–Å': '·é∂', '–ñ': '·èÇ', '–ó': '·é•', '–ò': '·è†', '–ô': '·è¶', '–ö': '·èû', '–õ': '·é∑',
                '–ú': '·èÅ', '–ù': '·éæ', '–û': '·èá', '–ü': '·é§', '–†': '·èí', '–°': '·èï', '–¢': '·éø', '–£': '·èå', '–§': '·èâ', '–•': '·èä', '–¶': '·èã', '–ß': '·èã', '–®': '·èã', '–©': '·èã', '–™': '·èã',
                '–´': '·èã', '–¨': '·èã', '–≠': '·èã', '–Æ': '·èã', '–Ø': '·èã'
            };

            for (let i = 0; i < text.length; i++) {
                const char = text[i];
                result += map[char] || char; // Fallback to original character if no mapping exists
            }
            return result;
        }
    },
];

module.exports = programmerUnicodeStyles;